/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Display name of operation
 */
export interface OperationDisplay {
  /**
   * The resource provider name: Microsoft.MachineLearningExperimentation
   */
  provider?: string;
  /**
   * The resource on which the operation is performed.
   */
  resource?: string;
  /**
   * The operation that users can perform.
   */
  operation?: string;
  /**
   * The description for the operation.
   */
  description?: string;
}

/**
 * Azure Machine Learning workspace REST API operation
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * Display name of operation
   */
  display?: OperationDisplay;
}

/**
 * Identity that will be used to access key vault for encryption at rest
 */
export interface IdentityForCmk {
  /**
   * The ArmId of the user assigned identity that will be used to access the customer managed key
   * vault
   */
  userAssignedIdentity: string;
}

/**
 * An interface representing KeyVaultProperties.
 */
export interface KeyVaultProperties {
  /**
   * The ArmId of the keyVault where the customer owned encryption key is present.
   */
  keyVaultArmId: string;
  /**
   * Key vault uri to access the encryption key.
   */
  keyIdentifier: string;
  /**
   * For future use - The client id of the identity which will be used to access key vault.
   */
  identityClientId?: string;
}

/**
 * An interface representing EncryptionProperty.
 */
export interface EncryptionProperty {
  /**
   * Indicates whether or not the encryption is enabled for the workspace. Possible values include:
   * 'Enabled', 'Disabled'
   */
  status: EncryptionStatus;
  /**
   * The identity that will be used to access the key vault for encryption at rest.
   */
  identity?: IdentityForCmk;
  /**
   * Customer Key vault properties.
   */
  keyVaultProperties: KeyVaultProperties;
}

/**
 * The Private Endpoint resource.
 */
export interface PrivateEndpoint {
  /**
   * The ARM identifier for Private Endpoint
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The ARM identifier for Subnet resource that private endpoint links to
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subnetArmId?: string;
}

/**
 * A collection of information about the state of the connection between service consumer and
 * provider.
 */
export interface PrivateLinkServiceConnectionState {
  /**
   * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the
   * service. Possible values include: 'Pending', 'Approved', 'Rejected', 'Disconnected', 'Timeout'
   */
  status?: PrivateEndpointServiceConnectionStatus;
  /**
   * The reason for approval/rejection of the connection.
   */
  description?: string;
  /**
   * A message indicating if changes on the service provider require any updates on the consumer.
   */
  actionsRequired?: string;
}

/**
 * Azure Resource Manager resource envelope.
 */
export interface Resource extends BaseResource {
  /**
   * Specifies the resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Specifies the name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The identity of the resource.
   */
  identity?: Identity;
  /**
   * Specifies the location of the resource.
   */
  location?: string;
  /**
   * Specifies the type of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Contains resource tags defined as key/value pairs.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The sku of the workspace.
   */
  sku?: Sku;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
}

/**
 * The Private Endpoint Connection resource.
 */
export interface PrivateEndpointConnection extends Resource {
  /**
   * The resource of private end point.
   */
  privateEndpoint?: PrivateEndpoint;
  /**
   * A collection of information about the state of the connection between service consumer and
   * provider.
   */
  privateLinkServiceConnectionState: PrivateLinkServiceConnectionState;
  /**
   * The provisioning state of the private endpoint connection resource. Possible values include:
   * 'Succeeded', 'Creating', 'Deleting', 'Failed'
   */
  provisioningState?: PrivateEndpointConnectionProvisioningState;
}

/**
 * An interface representing SharedPrivateLinkResource.
 */
export interface SharedPrivateLinkResource {
  /**
   * Unique name of the private link.
   */
  name?: string;
  /**
   * The resource id that private link links to.
   */
  privateLinkResourceId?: string;
  /**
   * The private link resource group id.
   */
  groupId?: string;
  /**
   * Request message.
   */
  requestMessage?: string;
  /**
   * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the
   * service. Possible values include: 'Pending', 'Approved', 'Rejected', 'Disconnected', 'Timeout'
   */
  status?: PrivateEndpointServiceConnectionStatus;
}

/**
 * An interface representing NotebookPreparationError.
 */
export interface NotebookPreparationError {
  errorMessage?: string;
  statusCode?: number;
}

/**
 * An interface representing NotebookResourceInfo.
 */
export interface NotebookResourceInfo {
  fqdn?: string;
  /**
   * the data plane resourceId that used to initialize notebook component
   */
  resourceId?: string;
  /**
   * The error that occurs when preparing notebook.
   */
  notebookPreparationError?: NotebookPreparationError;
}

/**
 * An interface representing CosmosDbSettings.
 */
export interface CosmosDbSettings {
  /**
   * The throughput of the collections in cosmosdb database
   */
  collectionsThroughput?: number;
}

/**
 * An interface representing ServiceManagedResourcesSettings.
 */
export interface ServiceManagedResourcesSettings {
  /**
   * The settings for the service managed cosmosdb account.
   */
  cosmosDb?: CosmosDbSettings;
}

/**
 * An object that represents a machine learning workspace.
 */
export interface Workspace extends Resource {
  /**
   * The immutable id associated with this workspace.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly workspaceId?: string;
  /**
   * The description of this workspace.
   */
  description?: string;
  /**
   * The friendly name for this workspace. This name in mutable
   */
  friendlyName?: string;
  /**
   * ARM id of the key vault associated with this workspace. This cannot be changed once the
   * workspace has been created
   */
  keyVault?: string;
  /**
   * ARM id of the application insights associated with this workspace. This cannot be changed once
   * the workspace has been created
   */
  applicationInsights?: string;
  /**
   * ARM id of the container registry associated with this workspace. This cannot be changed once
   * the workspace has been created
   */
  containerRegistry?: string;
  /**
   * ARM id of the storage account associated with this workspace. This cannot be changed once the
   * workspace has been created
   */
  storageAccount?: string;
  /**
   * Url for the discovery service to identify regional endpoints for machine learning
   * experimentation services
   */
  discoveryUrl?: string;
  /**
   * The current deployment state of workspace resource. The provisioningState is to indicate
   * states for resource provisioning. Possible values include: 'Unknown', 'Updating', 'Creating',
   * 'Deleting', 'Succeeded', 'Failed', 'Canceled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The encryption settings of Azure ML workspace.
   */
  encryption?: EncryptionProperty;
  /**
   * The flag to signal HBI data in the workspace and reduce diagnostic data collected by the
   * service. Default value: false.
   */
  hbiWorkspace?: boolean;
  /**
   * The name of the managed resource group created by workspace RP in customer subscription if the
   * workspace is CMK workspace
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceProvisionedResourceGroup?: string;
  /**
   * Count of private connections in the workspace
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateLinkCount?: number;
  /**
   * The compute name for image build
   */
  imageBuildCompute?: string;
  /**
   * The flag to indicate whether to allow public access when behind VNet. Default value: false.
   */
  allowPublicAccessWhenBehindVnet?: boolean;
  /**
   * The list of private endpoint connections in the workspace.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateEndpointConnections?: PrivateEndpointConnection[];
  /**
   * The list of shared private link resources in this workspace.
   */
  sharedPrivateLinkResources?: SharedPrivateLinkResource[];
  /**
   * The notebook info of Azure ML workspace.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly notebookInfo?: NotebookResourceInfo;
  /**
   * The service managed resource settings.
   */
  serviceManagedResourcesSettings?: ServiceManagedResourcesSettings;
  /**
   * The user assigned identity resource id that represents the workspace identity.
   */
  primaryUserAssignedIdentity?: string;
}

/**
 * Sku of the resource
 */
export interface Sku {
  /**
   * Name of the sku
   */
  name?: string;
  /**
   * Tier of the sku like Basic or Enterprise
   */
  tier?: string;
}

/**
 * User Assigned Identity
 */
export interface UserAssignedIdentity {
  /**
   * The principal ID of the user assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The tenant ID of the user assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * The clientId(aka appId) of the user assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly clientId?: string;
}

/**
 * Identity for the resource.
 */
export interface Identity {
  /**
   * The principal ID of resource identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The tenant ID of resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * The identity type. Possible values include: 'SystemAssigned', 'SystemAssigned,UserAssigned',
   * 'UserAssigned', 'None'
   */
  type?: ResourceIdentityType;
  /**
   * The user assigned identities associated with the resource.
   */
  userAssignedIdentities?: { [propertyName: string]: UserAssignedIdentity };
}

/**
 * The parameters for updating a machine learning workspace.
 */
export interface WorkspaceUpdateParameters {
  /**
   * The resource tags for the machine learning workspace.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The sku of the workspace.
   */
  sku?: Sku;
  /**
   * The identity of the resource.
   */
  identity?: Identity;
  /**
   * The description of this workspace.
   */
  description?: string;
  /**
   * The friendly name for this workspace.
   */
  friendlyName?: string;
  /**
   * The compute name for image build
   */
  imageBuildCompute?: string;
  /**
   * The service managed resource settings.
   */
  serviceManagedResourcesSettings?: ServiceManagedResourcesSettings;
  /**
   * The user assigned identity resource id that represents the workspace identity.
   */
  primaryUserAssignedIdentity?: string;
}

/**
 * Features enabled for a workspace
 */
export interface AmlUserFeature {
  /**
   * Specifies the feature ID
   */
  id?: string;
  /**
   * Specifies the feature name
   */
  displayName?: string;
  /**
   * Describes the feature for user experience
   */
  description?: string;
}

/**
 * The Usage Names.
 */
export interface UsageName {
  /**
   * The name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: string;
  /**
   * The localized name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly localizedValue?: string;
}

/**
 * Describes AML Resource Usage.
 */
export interface Usage {
  /**
   * Specifies the resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Region of the AML workspace in the id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly amlWorkspaceLocation?: string;
  /**
   * Specifies the resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * An enum describing the unit of usage measurement. Possible values include: 'Count'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: UsageUnit;
  /**
   * The current usage of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentValue?: number;
  /**
   * The maximum permitted usage of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly limit?: number;
  /**
   * The name of the type of usage.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: UsageName;
}

/**
 * The estimated price info for using a VM of a particular OS type, tier, etc.
 */
export interface EstimatedVMPrice {
  /**
   * Retail price. The price charged for using the VM.
   */
  retailPrice: number;
  /**
   * OS type. Operating system type used by the VM. Possible values include: 'Linux', 'Windows'
   */
  osType: VMPriceOSType;
  /**
   * VM tier. The type of the VM. Possible values include: 'Standard', 'LowPriority', 'Spot'
   */
  vmTier: VMTier;
}

/**
 * The estimated price info for using a VM.
 */
export interface EstimatedVMPrices {
  /**
   * List of estimated VM prices. The list of estimated prices for using a VM of a particular OS
   * type, tier, etc.
   */
  values: EstimatedVMPrice[];
}

/**
 * Describes the properties of a VM size.
 */
export interface VirtualMachineSize {
  /**
   * Virtual Machine size name. The name of the virtual machine size.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Virtual Machine family name. The family name of the virtual machine size.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly family?: string;
  /**
   * Number of vPUs. The number of vCPUs supported by the virtual machine size.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vCPUs?: number;
  /**
   * Number of gPUs. The number of gPUs supported by the virtual machine size.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly gpus?: number;
  /**
   * OS VHD Disk size. The OS VHD disk size, in MB, allowed by the virtual machine size.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly osVhdSizeMB?: number;
  /**
   * Resource volume size. The resource volume size, in MB, allowed by the virtual machine size.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxResourceVolumeMB?: number;
  /**
   * Memory size. The amount of memory, in GB, supported by the virtual machine size.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly memoryGB?: number;
  /**
   * Low priority capable. Specifies if the virtual machine size supports low priority VMs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lowPriorityCapable?: boolean;
  /**
   * Premium IO supported. Specifies if the virtual machine size supports premium IO.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly premiumIO?: boolean;
  /**
   * Estimated VM prices. The estimated price information for using a VM.
   */
  estimatedVMPrices?: EstimatedVMPrices;
}

/**
 * The List Virtual Machine size operation response.
 */
export interface VirtualMachineSizeListResult {
  /**
   * The list of virtual machine sizes supported by AmlCompute.
   */
  amlCompute?: VirtualMachineSize[];
}

/**
 * The properties for Quota update or retrieval.
 */
export interface QuotaBaseProperties {
  /**
   * Specifies the resource ID.
   */
  id?: string;
  /**
   * Specifies the resource type.
   */
  type?: string;
  /**
   * Limit. The maximum permitted quota of the resource.
   */
  limit?: number;
  /**
   * An enum describing the unit of quota measurement. Possible values include: 'Count'
   */
  unit?: QuotaUnit;
}

/**
 * Quota update parameters.
 */
export interface QuotaUpdateParameters {
  /**
   * The list for update quota.
   */
  value?: QuotaBaseProperties[];
  /**
   * Region of workspace quota to be updated.
   */
  location?: string;
}

/**
 * The properties for update Quota response.
 */
export interface UpdateWorkspaceQuotas {
  /**
   * Specifies the resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Specifies the resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Limit. The maximum permitted quota of the resource.
   */
  limit?: number;
  /**
   * An enum describing the unit of quota measurement. Possible values include: 'Count'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: QuotaUnit;
  /**
   * Update Workspace Quota Status. Status of update workspace quota. Possible values include:
   * 'Undefined', 'Success', 'Failure', 'InvalidQuotaBelowClusterMinimum',
   * 'InvalidQuotaExceedsSubscriptionLimit', 'InvalidVMFamilyName', 'OperationNotSupportedForSku',
   * 'OperationNotEnabledForRegion'
   */
  status?: Status;
}

/**
 * The result of update workspace quota.
 */
export interface UpdateWorkspaceQuotasResult {
  /**
   * The list of workspace quota update result.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: UpdateWorkspaceQuotas[];
  /**
   * The URI to fetch the next page of workspace quota update result. Call ListNext() with this to
   * fetch the next page of Workspace Quota update result.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * The Resource Name.
 */
export interface ResourceName {
  /**
   * The name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: string;
  /**
   * The localized name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly localizedValue?: string;
}

/**
 * The quota assigned to a resource.
 */
export interface ResourceQuota {
  /**
   * Specifies the resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Region of the AML workspace in the id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly amlWorkspaceLocation?: string;
  /**
   * Specifies the resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: ResourceName;
  /**
   * Limit. The maximum permitted quota of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly limit?: number;
  /**
   * An enum describing the unit of quota measurement. Possible values include: 'Count'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: QuotaUnit;
}

/**
 * Read only system data
 */
export interface SystemData {
  /**
   * An identifier for the identity that created the resource
   */
  createdBy?: string;
  /**
   * The type of identity that created the resource. Possible values include: 'user',
   * 'application', 'managedIdentity', 'key'
   */
  createdByType?: IdentityType;
  /**
   * The timestamp of resource creation (UTC)
   */
  createdAt?: Date;
  /**
   * An identifier for the identity that last modified the resource
   */
  lastModifiedBy?: string;
  /**
   * The type of identity that last modified the resource. Possible values include: 'user',
   * 'application', 'managedIdentity', 'key'
   */
  lastModifiedByType?: IdentityType;
  /**
   * The timestamp of resource last modification (UTC)
   */
  lastModifiedAt?: Date;
}

/**
 * Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
 */
export interface ResourceId extends BaseResource {
  /**
   * The ID of the resource
   */
  id: string;
}

/**
 * An interface representing Password.
 */
export interface Password {
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: string;
}

/**
 * An interface representing RegistryListCredentialsResult.
 */
export interface RegistryListCredentialsResult {
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly username?: string;
  passwords?: Password[];
}

/**
 * An interface representing ListNotebookKeysResult.
 */
export interface ListNotebookKeysResult {
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly primaryAccessKey?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly secondaryAccessKey?: string;
}

/**
 * An interface representing ListWorkspaceKeysResult.
 */
export interface ListWorkspaceKeysResult {
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userStorageKey?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userStorageResourceId?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly appInsightsInstrumentationKey?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly containerRegistryCredentials?: RegistryListCredentialsResult;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly notebookAccessKeys?: ListNotebookKeysResult;
}

/**
 * An interface representing NotebookAccessTokenResult.
 */
export interface NotebookAccessTokenResult {
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly notebookResourceId?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostName?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly publicDns?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accessToken?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tokenType?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly expiresIn?: number;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly refreshToken?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly scope?: string;
}

/**
 * Error detail information.
 */
export interface ErrorDetail {
  /**
   * Error code.
   */
  code: string;
  /**
   * Error message.
   */
  message: string;
}

/**
 * Error response information.
 */
export interface ErrorResponse {
  /**
   * Error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * Error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * An array of error detail objects.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorDetail[];
}

/**
 * Wrapper for error response to follow ARM guidelines.
 */
export interface MachineLearningServiceError {
  /**
   * The error response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: ErrorResponse;
}

/**
 * Contains the possible cases for Compute.
 */
export type ComputeUnion = Compute | AKS | AmlCompute | ComputeInstance | VirtualMachine | HDInsight | DataFactory | Databricks | DataLakeAnalytics;

/**
 * Machine Learning compute object.
 */
export interface Compute {
  /**
   * Polymorphic Discriminator
   */
  computeType: "Compute";
  /**
   * Location for the underlying compute
   */
  computeLocation?: string;
  /**
   * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning,
   * Succeeded, and Failed. Possible values include: 'Unknown', 'Updating', 'Creating', 'Deleting',
   * 'Succeeded', 'Failed', 'Canceled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The description of the Machine Learning compute.
   */
  description?: string;
  /**
   * ARM resource id of the underlying compute
   */
  resourceId?: string;
  /**
   * Errors during provisioning
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningErrors?: MachineLearningServiceError[];
  /**
   * Indicating whether the compute was provisioned by user and brought from outside if true, or
   * machine learning service provisioned it if false.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isAttachedCompute?: boolean;
}

/**
 * Machine Learning compute object wrapped into ARM resource envelope.
 */
export interface ComputeResource extends Resource {
  /**
   * Compute properties
   */
  properties?: ComputeUnion;
}

/**
 * A system service running on a compute.
 */
export interface SystemService {
  /**
   * The type of this system service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemServiceType?: string;
  /**
   * Public IP address
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly publicIpAddress?: string;
  /**
   * The version for this type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: string;
}

/**
 * The ssl configuration for scoring
 */
export interface SslConfiguration {
  /**
   * Enable or disable ssl for scoring. Possible values include: 'Disabled', 'Enabled', 'Auto'
   */
  status?: Status1;
  /**
   * Cert data
   */
  cert?: string;
  /**
   * Key data
   */
  key?: string;
  /**
   * CNAME of the cert
   */
  cname?: string;
}

/**
 * Advance configuration for AKS networking
 */
export interface AksNetworkingConfiguration {
  /**
   * Virtual network subnet resource ID the compute nodes belong to
   */
  subnetId?: string;
  /**
   * A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with
   * any Subnet IP ranges.
   */
  serviceCidr?: string;
  /**
   * An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service
   * address range specified in serviceCidr.
   */
  dnsServiceIP?: string;
  /**
   * A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any
   * Subnet IP ranges or the Kubernetes service address range.
   */
  dockerBridgeCidr?: string;
}

/**
 * AKS properties
 */
export interface AKSProperties {
  /**
   * Cluster full qualified domain name
   */
  clusterFqdn?: string;
  /**
   * System services
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemServices?: SystemService[];
  /**
   * Number of agents
   */
  agentCount?: number;
  /**
   * Agent virtual machine size
   */
  agentVmSize?: string;
  /**
   * Intended usage of the cluster. Possible values include: 'FastProd', 'DenseProd', 'DevTest'.
   * Default value: 'FastProd'.
   */
  clusterPurpose?: ClusterPurpose;
  /**
   * SSL configuration
   */
  sslConfiguration?: SslConfiguration;
  /**
   * AKS networking configuration for vnet
   */
  aksNetworkingConfiguration?: AksNetworkingConfiguration;
}

/**
 * A Machine Learning compute based on AKS.
 */
export interface AKS {
  /**
   * Polymorphic Discriminator
   */
  computeType: "AKS";
  /**
   * Location for the underlying compute
   */
  computeLocation?: string;
  /**
   * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning,
   * Succeeded, and Failed. Possible values include: 'Unknown', 'Updating', 'Creating', 'Deleting',
   * 'Succeeded', 'Failed', 'Canceled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The description of the Machine Learning compute.
   */
  description?: string;
  /**
   * ARM resource id of the underlying compute
   */
  resourceId?: string;
  /**
   * Errors during provisioning
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningErrors?: MachineLearningServiceError[];
  /**
   * Indicating whether the compute was provisioned by user and brought from outside if true, or
   * machine learning service provisioned it if false.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isAttachedCompute?: boolean;
  /**
   * AKS properties
   */
  properties?: AKSProperties;
}

/**
 * Virtual Machine image for Windows AML Compute
 */
export interface VirtualMachineImage {
  /**
   * Virtual Machine image path
   */
  id: string;
}

/**
 * scale settings for AML Compute
 */
export interface ScaleSettings {
  /**
   * Max number of nodes to use
   */
  maxNodeCount: number;
  /**
   * Min number of nodes to use. Default value: 0.
   */
  minNodeCount?: number;
  /**
   * Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.
   */
  nodeIdleTimeBeforeScaleDown?: string;
}

/**
 * Settings for user account that gets created on each on the nodes of a compute.
 */
export interface UserAccountCredentials {
  /**
   * User name. Name of the administrator user account which can be used to SSH to nodes.
   */
  adminUserName: string;
  /**
   * SSH public key. SSH public key of the administrator user account.
   */
  adminUserSshPublicKey?: string;
  /**
   * Password. Password of the administrator user account.
   */
  adminUserPassword?: string;
}

/**
 * Counts of various compute node states on the amlCompute.
 */
export interface NodeStateCounts {
  /**
   * Idle node count. Number of compute nodes in idle state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly idleNodeCount?: number;
  /**
   * Running node count. Number of compute nodes which are running jobs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly runningNodeCount?: number;
  /**
   * Preparing node count. Number of compute nodes which are being prepared.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly preparingNodeCount?: number;
  /**
   * Unusable node count. Number of compute nodes which are in unusable state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unusableNodeCount?: number;
  /**
   * Leaving node count. Number of compute nodes which are leaving the amlCompute.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly leavingNodeCount?: number;
  /**
   * Preempted node count. Number of compute nodes which are in preempted state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly preemptedNodeCount?: number;
}

/**
 * AML Compute properties
 */
export interface AmlComputeProperties {
  /**
   * Compute OS Type. Possible values include: 'Linux', 'Windows'. Default value: 'Linux'.
   */
  osType?: OsType;
  /**
   * Virtual Machine Size
   */
  vmSize?: string;
  /**
   * Virtual Machine priority. Possible values include: 'Dedicated', 'LowPriority'
   */
  vmPriority?: VmPriority;
  /**
   * Virtual Machine image for AML Compute - windows only
   */
  virtualMachineImage?: VirtualMachineImage;
  /**
   * Network is isolated or not
   */
  isolatedNetwork?: boolean;
  /**
   * Scale settings for AML Compute
   */
  scaleSettings?: ScaleSettings;
  /**
   * User account credentials. Credentials for an administrator user account that will be created
   * on each compute node.
   */
  userAccountCredentials?: UserAccountCredentials;
  /**
   * Subnet. Virtual network subnet resource ID the compute nodes belong to.
   */
  subnet?: ResourceId;
  /**
   * Close remote Login Access Port. State of the public SSH port. Possible values are: Disabled -
   * Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates
   * that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that
   * the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all
   * public nodes. It can be default only during cluster creation time, after creation it will be
   * either enabled or disabled. Possible values include: 'Enabled', 'Disabled', 'NotSpecified'.
   * Default value: 'NotSpecified'.
   */
  remoteLoginPortPublicAccess?: RemoteLoginPortPublicAccess;
  /**
   * Allocation state. Allocation state of the compute. Possible values are: steady - Indicates
   * that the compute is not resizing. There are no changes to the number of compute nodes in the
   * compute in progress. A compute enters this state when it is created and when no operations are
   * being performed on the compute to change the number of compute nodes. resizing - Indicates
   * that the compute is resizing; that is, compute nodes are being added to or removed from the
   * compute. Possible values include: 'Steady', 'Resizing'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly allocationState?: AllocationState;
  /**
   * Allocation state transition time. The time at which the compute entered its current allocation
   * state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly allocationStateTransitionTime?: Date;
  /**
   * Errors. Collection of errors encountered by various compute nodes during node setup.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errors?: MachineLearningServiceError[];
  /**
   * Current node count. The number of compute nodes currently assigned to the compute.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentNodeCount?: number;
  /**
   * Target node count. The target number of compute nodes for the compute. If the allocationState
   * is resizing, this property denotes the target node count for the ongoing resize operation. If
   * the allocationState is steady, this property denotes the target node count for the previous
   * resize operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetNodeCount?: number;
  /**
   * Node state counts. Counts of various node states on the compute.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nodeStateCounts?: NodeStateCounts;
  /**
   * Enable node public IP. Enable or disable node public IP address provisioning. Possible values
   * are: Possible values are: true - Indicates that the compute nodes will have public IPs
   * provisioned. false - Indicates that the compute nodes will have a private endpoint and no
   * public IPs. Default value: true.
   */
  enableNodePublicIp?: boolean;
}

/**
 * An Azure Machine Learning compute.
 */
export interface AmlCompute {
  /**
   * Polymorphic Discriminator
   */
  computeType: "AmlCompute";
  /**
   * Location for the underlying compute
   */
  computeLocation?: string;
  /**
   * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning,
   * Succeeded, and Failed. Possible values include: 'Unknown', 'Updating', 'Creating', 'Deleting',
   * 'Succeeded', 'Failed', 'Canceled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The description of the Machine Learning compute.
   */
  description?: string;
  /**
   * ARM resource id of the underlying compute
   */
  resourceId?: string;
  /**
   * Errors during provisioning
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningErrors?: MachineLearningServiceError[];
  /**
   * Indicating whether the compute was provisioned by user and brought from outside if true, or
   * machine learning service provisioned it if false.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isAttachedCompute?: boolean;
  /**
   * AML Compute properties
   */
  properties?: AmlComputeProperties;
}

/**
 * Specifies policy and settings for SSH access.
 */
export interface ComputeInstanceSshSettings {
  /**
   * Access policy for SSH. State of the public SSH port. Possible values are: Disabled - Indicates
   * that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh
   * port is open and accessible according to the VNet/subnet policy if applicable. Possible values
   * include: 'Enabled', 'Disabled'. Default value: 'Disabled'.
   */
  sshPublicAccess?: SshPublicAccess;
  /**
   * Describes the admin user name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly adminUserName?: string;
  /**
   * Describes the port for connecting through SSH.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sshPort?: number;
  /**
   * Specifies the SSH rsa public key file as a string. Use "ssh-keygen -t rsa -b 2048" to generate
   * your SSH key pairs.
   */
  adminPublicKey?: string;
}

/**
 * Defines all connectivity endpoints and properties for an ComputeInstance.
 */
export interface ComputeInstanceConnectivityEndpoints {
  /**
   * Public IP Address of this ComputeInstance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly publicIpAddress?: string;
  /**
   * Private IP Address of this ComputeInstance (local to the VNET in which the compute instance is
   * deployed).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateIpAddress?: string;
}

/**
 * Defines an Aml Instance application and its connectivity endpoint URI.
 */
export interface ComputeInstanceApplication {
  /**
   * Name of the ComputeInstance application.
   */
  displayName?: string;
  /**
   * Application' endpoint URI.
   */
  endpointUri?: string;
}

/**
 * Describes information on user who created this ComputeInstance.
 */
export interface ComputeInstanceCreatedBy {
  /**
   * Name of the user.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userName?: string;
  /**
   * Uniquely identifies user' Azure Active Directory organization.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userOrgId?: string;
  /**
   * Uniquely identifies the user within his/her organization.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userId?: string;
}

/**
 * A user that can be assigned to a compute instance.
 */
export interface AssignedUser {
  /**
   * User’s AAD Object Id.
   */
  objectId: string;
  /**
   * User’s AAD Tenant Id.
   */
  tenantId: string;
}

/**
 * Settings for a personal compute instance.
 */
export interface PersonalComputeInstanceSettings {
  /**
   * Assigned User. A user explicitly assigned to a personal compute instance.
   */
  assignedUser?: AssignedUser;
}

/**
 * Script reference
 */
export interface ScriptReference {
  /**
   * The storage source of the script: inline, workspace.
   */
  scriptSource?: string;
  /**
   * The location of scripts in the mounted volume.
   */
  scriptData?: string;
  /**
   * Optional command line arguments passed to the script to run.
   */
  scriptArguments?: string;
  /**
   * Optional time period passed to timeout command.
   */
  timeout?: string;
}

/**
 * Customized setup scripts
 */
export interface ScriptsToExecute {
  /**
   * Script that's run every time the machine starts.
   */
  startupScript?: ScriptReference;
  /**
   * Script that's run only once during provision of the compute.
   */
  creationScript?: ScriptReference;
}

/**
 * Details of customized scripts to execute for setting up the cluster.
 */
export interface SetupScripts {
  /**
   * Customized setup scripts
   */
  scripts?: ScriptsToExecute;
}

/**
 * The last operation on ComputeInstance.
 */
export interface ComputeInstanceLastOperation {
  /**
   * Name of the last operation. Possible values include: 'Create', 'Start', 'Stop', 'Restart',
   * 'Reimage', 'Delete'
   */
  operationName?: OperationName;
  /**
   * Time of the last operation.
   */
  operationTime?: Date;
  /**
   * Operation status. Possible values include: 'InProgress', 'Succeeded', 'CreateFailed',
   * 'StartFailed', 'StopFailed', 'RestartFailed', 'ReimageFailed', 'DeleteFailed'
   */
  operationStatus?: OperationStatus;
}

/**
 * Compute Instance properties
 */
export interface ComputeInstanceProperties {
  /**
   * Virtual Machine Size
   */
  vmSize?: string;
  /**
   * Subnet. Virtual network subnet resource ID the compute nodes belong to.
   */
  subnet?: ResourceId;
  /**
   * Sharing policy for applications on this compute instance. Policy for sharing applications on
   * this compute instance among users of parent workspace. If Personal, only the creator can
   * access applications on this compute instance. When Shared, any workspace user can access
   * applications on this instance depending on his/her assigned role. Possible values include:
   * 'Personal', 'Shared'. Default value: 'Shared'.
   */
  applicationSharingPolicy?: ApplicationSharingPolicy;
  /**
   * Specifies policy and settings for SSH access.
   */
  sshSettings?: ComputeInstanceSshSettings;
  /**
   * Describes all connectivity endpoints available for this ComputeInstance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly connectivityEndpoints?: ComputeInstanceConnectivityEndpoints;
  /**
   * Describes available applications and their endpoints on this ComputeInstance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly applications?: ComputeInstanceApplication[];
  /**
   * Describes information on user who created this ComputeInstance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdBy?: ComputeInstanceCreatedBy;
  /**
   * Errors. Collection of errors encountered on this ComputeInstance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errors?: MachineLearningServiceError[];
  /**
   * The current state of this ComputeInstance. Possible values include: 'Creating',
   * 'CreateFailed', 'Deleting', 'Running', 'Restarting', 'JobRunning', 'SettingUp', 'SetupFailed',
   * 'Starting', 'Stopped', 'Stopping', 'UserSettingUp', 'UserSetupFailed', 'Unknown', 'Unusable'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: ComputeInstanceState;
  /**
   * Compute Instance Authorization type. The Compute Instance Authorization type. Available values
   * are personal (default). Possible values include: 'personal'. Default value: 'personal'.
   */
  computeInstanceAuthorizationType?: ComputeInstanceAuthorizationType;
  /**
   * Personal Compute Instance settings. Settings for a personal compute instance.
   */
  personalComputeInstanceSettings?: PersonalComputeInstanceSettings;
  /**
   * Details of customized scripts to execute for setting up the cluster.
   */
  setupScripts?: SetupScripts;
  /**
   * The last operation on ComputeInstance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastOperation?: ComputeInstanceLastOperation;
}

/**
 * An Azure Machine Learning compute instance.
 */
export interface ComputeInstance {
  /**
   * Polymorphic Discriminator
   */
  computeType: "ComputeInstance";
  /**
   * Location for the underlying compute
   */
  computeLocation?: string;
  /**
   * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning,
   * Succeeded, and Failed. Possible values include: 'Unknown', 'Updating', 'Creating', 'Deleting',
   * 'Succeeded', 'Failed', 'Canceled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The description of the Machine Learning compute.
   */
  description?: string;
  /**
   * ARM resource id of the underlying compute
   */
  resourceId?: string;
  /**
   * Errors during provisioning
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningErrors?: MachineLearningServiceError[];
  /**
   * Indicating whether the compute was provisioned by user and brought from outside if true, or
   * machine learning service provisioned it if false.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isAttachedCompute?: boolean;
  /**
   * Compute Instance properties
   */
  properties?: ComputeInstanceProperties;
}

/**
 * Admin credentials for virtual machine
 */
export interface VirtualMachineSshCredentials {
  /**
   * Username of admin account
   */
  username?: string;
  /**
   * Password of admin account
   */
  password?: string;
  /**
   * Public key data
   */
  publicKeyData?: string;
  /**
   * Private key data
   */
  privateKeyData?: string;
}

/**
 * An interface representing VirtualMachineProperties.
 */
export interface VirtualMachineProperties {
  /**
   * Virtual Machine size
   */
  virtualMachineSize?: string;
  /**
   * Port open for ssh connections.
   */
  sshPort?: number;
  /**
   * Public IP address of the virtual machine.
   */
  address?: string;
  /**
   * Admin credentials for virtual machine
   */
  administratorAccount?: VirtualMachineSshCredentials;
}

/**
 * A Machine Learning compute based on Azure Virtual Machines.
 */
export interface VirtualMachine {
  /**
   * Polymorphic Discriminator
   */
  computeType: "VirtualMachine";
  /**
   * Location for the underlying compute
   */
  computeLocation?: string;
  /**
   * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning,
   * Succeeded, and Failed. Possible values include: 'Unknown', 'Updating', 'Creating', 'Deleting',
   * 'Succeeded', 'Failed', 'Canceled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The description of the Machine Learning compute.
   */
  description?: string;
  /**
   * ARM resource id of the underlying compute
   */
  resourceId?: string;
  /**
   * Errors during provisioning
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningErrors?: MachineLearningServiceError[];
  /**
   * Indicating whether the compute was provisioned by user and brought from outside if true, or
   * machine learning service provisioned it if false.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isAttachedCompute?: boolean;
  properties?: VirtualMachineProperties;
}

/**
 * An interface representing HDInsightProperties.
 */
export interface HDInsightProperties {
  /**
   * Port open for ssh connections on the master node of the cluster.
   */
  sshPort?: number;
  /**
   * Public IP address of the master node of the cluster.
   */
  address?: string;
  /**
   * Admin credentials for master node of the cluster
   */
  administratorAccount?: VirtualMachineSshCredentials;
}

/**
 * A HDInsight compute.
 */
export interface HDInsight {
  /**
   * Polymorphic Discriminator
   */
  computeType: "HDInsight";
  /**
   * Location for the underlying compute
   */
  computeLocation?: string;
  /**
   * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning,
   * Succeeded, and Failed. Possible values include: 'Unknown', 'Updating', 'Creating', 'Deleting',
   * 'Succeeded', 'Failed', 'Canceled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The description of the Machine Learning compute.
   */
  description?: string;
  /**
   * ARM resource id of the underlying compute
   */
  resourceId?: string;
  /**
   * Errors during provisioning
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningErrors?: MachineLearningServiceError[];
  /**
   * Indicating whether the compute was provisioned by user and brought from outside if true, or
   * machine learning service provisioned it if false.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isAttachedCompute?: boolean;
  properties?: HDInsightProperties;
}

/**
 * A DataFactory compute.
 */
export interface DataFactory {
  /**
   * Polymorphic Discriminator
   */
  computeType: "DataFactory";
  /**
   * Location for the underlying compute
   */
  computeLocation?: string;
  /**
   * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning,
   * Succeeded, and Failed. Possible values include: 'Unknown', 'Updating', 'Creating', 'Deleting',
   * 'Succeeded', 'Failed', 'Canceled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The description of the Machine Learning compute.
   */
  description?: string;
  /**
   * ARM resource id of the underlying compute
   */
  resourceId?: string;
  /**
   * Errors during provisioning
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningErrors?: MachineLearningServiceError[];
  /**
   * Indicating whether the compute was provisioned by user and brought from outside if true, or
   * machine learning service provisioned it if false.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isAttachedCompute?: boolean;
}

/**
 * An interface representing DatabricksProperties.
 */
export interface DatabricksProperties {
  /**
   * Databricks access token
   */
  databricksAccessToken?: string;
  /**
   * Workspace Url
   */
  workspaceUrl?: string;
}

/**
 * A DataFactory compute.
 */
export interface Databricks {
  /**
   * Polymorphic Discriminator
   */
  computeType: "Databricks";
  /**
   * Location for the underlying compute
   */
  computeLocation?: string;
  /**
   * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning,
   * Succeeded, and Failed. Possible values include: 'Unknown', 'Updating', 'Creating', 'Deleting',
   * 'Succeeded', 'Failed', 'Canceled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The description of the Machine Learning compute.
   */
  description?: string;
  /**
   * ARM resource id of the underlying compute
   */
  resourceId?: string;
  /**
   * Errors during provisioning
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningErrors?: MachineLearningServiceError[];
  /**
   * Indicating whether the compute was provisioned by user and brought from outside if true, or
   * machine learning service provisioned it if false.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isAttachedCompute?: boolean;
  properties?: DatabricksProperties;
}

/**
 * An interface representing DataLakeAnalyticsProperties.
 */
export interface DataLakeAnalyticsProperties {
  /**
   * DataLake Store Account Name
   */
  dataLakeStoreAccountName?: string;
}

/**
 * A DataLakeAnalytics compute.
 */
export interface DataLakeAnalytics {
  /**
   * Polymorphic Discriminator
   */
  computeType: "DataLakeAnalytics";
  /**
   * Location for the underlying compute
   */
  computeLocation?: string;
  /**
   * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning,
   * Succeeded, and Failed. Possible values include: 'Unknown', 'Updating', 'Creating', 'Deleting',
   * 'Succeeded', 'Failed', 'Canceled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The description of the Machine Learning compute.
   */
  description?: string;
  /**
   * ARM resource id of the underlying compute
   */
  resourceId?: string;
  /**
   * Errors during provisioning
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningErrors?: MachineLearningServiceError[];
  /**
   * Indicating whether the compute was provisioned by user and brought from outside if true, or
   * machine learning service provisioned it if false.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isAttachedCompute?: boolean;
  properties?: DataLakeAnalyticsProperties;
}

/**
 * Service principal credentials.
 */
export interface ServicePrincipalCredentials {
  /**
   * Client Id
   */
  clientId: string;
  /**
   * Client secret
   */
  clientSecret: string;
}

/**
 * AmlCompute update parameters.
 */
export interface ClusterUpdateParameters {
  /**
   * Scale settings. Desired scale settings for the amlCompute.
   */
  scaleSettings?: ScaleSettings;
}

/**
 * Contains the possible cases for ComputeNodesInformation.
 */
export type ComputeNodesInformationUnion = ComputeNodesInformation | AmlComputeNodesInformation;

/**
 * Compute nodes information related to a Machine Learning compute. Might differ for every type of
 * compute.
 */
export interface ComputeNodesInformation {
  /**
   * Polymorphic Discriminator
   */
  computeType: "ComputeNodesInformation";
  /**
   * The continuation token.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Compute node information related to a AmlCompute.
 */
export interface AmlComputeNodeInformation {
  /**
   * Node ID. ID of the compute node.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nodeId?: string;
  /**
   * Private IP address. Private IP address of the compute node.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateIpAddress?: string;
  /**
   * Public IP address. Public IP address of the compute node.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly publicIpAddress?: string;
  /**
   * Port. SSH port number of the node.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly port?: number;
  /**
   * State of the compute node. Values are idle, running, preparing, unusable, leaving and
   * preempted. Possible values include: 'idle', 'running', 'preparing', 'unusable', 'leaving',
   * 'preempted'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nodeState?: NodeState;
  /**
   * Run ID. ID of the Experiment running on the node, if any else null.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly runId?: string;
}

/**
 * Contains the possible cases for ComputeSecrets.
 */
export type ComputeSecretsUnion = ComputeSecrets | AksComputeSecrets | VirtualMachineSecrets | DatabricksComputeSecrets;

/**
 * Secrets related to a Machine Learning compute. Might differ for every type of compute.
 */
export interface ComputeSecrets {
  /**
   * Polymorphic Discriminator
   */
  computeType: "ComputeSecrets";
}

/**
 * Secrets related to a Machine Learning compute based on AKS.
 */
export interface AksComputeSecrets {
  /**
   * Polymorphic Discriminator
   */
  computeType: "AKS";
  /**
   * Content of kubeconfig file that can be used to connect to the Kubernetes cluster.
   */
  userKubeConfig?: string;
  /**
   * Content of kubeconfig file that can be used to connect to the Kubernetes cluster.
   */
  adminKubeConfig?: string;
  /**
   * Image registry pull secret.
   */
  imagePullSecretName?: string;
}

/**
 * Secrets related to a Machine Learning compute based on AKS.
 */
export interface VirtualMachineSecrets {
  /**
   * Polymorphic Discriminator
   */
  computeType: "VirtualMachine";
  /**
   * Admin credentials for virtual machine.
   */
  administratorAccount?: VirtualMachineSshCredentials;
}

/**
 * Secrets related to a Machine Learning compute based on Databricks.
 */
export interface DatabricksComputeSecrets {
  /**
   * Polymorphic Discriminator
   */
  computeType: "Databricks";
  /**
   * access token for databricks account.
   */
  databricksAccessToken?: string;
}

/**
 * Features/user capabilities associated with the sku
 */
export interface SKUCapability {
  /**
   * Capability/Feature ID
   */
  name?: string;
  /**
   * Details about the feature/capability
   */
  value?: string;
}

/**
 * Describes The zonal capabilities of a SKU.
 */
export interface ResourceSkuZoneDetails {
  /**
   * The set of zones that the SKU is available in with the specified capabilities.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string[];
  /**
   * A list of capabilities that are available for the SKU in the specified list of zones.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly capabilities?: SKUCapability[];
}

/**
 * An interface representing ResourceSkuLocationInfo.
 */
export interface ResourceSkuLocationInfo {
  /**
   * Location of the SKU
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * List of availability zones where the SKU is supported.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly zones?: string[];
  /**
   * Details of capabilities available to a SKU in specific zones.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly zoneDetails?: ResourceSkuZoneDetails[];
}

/**
 * The restriction because of which SKU cannot be used.
 */
export interface Restriction {
  /**
   * The type of restrictions. As of now only possible value for this is location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The value of restrictions. If the restriction type is set to location. This would be different
   * locations where the SKU is restricted.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly values?: string[];
  /**
   * The reason for the restriction. Possible values include: 'NotSpecified',
   * 'NotAvailableForRegion', 'NotAvailableForSubscription'
   */
  reasonCode?: ReasonCode;
}

/**
 * Describes Workspace Sku details and features
 */
export interface WorkspaceSku {
  /**
   * The set of locations that the SKU is available. This will be supported and registered Azure
   * Geo Regions (e.g. West US, East US, Southeast Asia, etc.).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly locations?: string[];
  /**
   * A list of locations and availability zones in those locations where the SKU is available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly locationInfo?: ResourceSkuLocationInfo[];
  /**
   * Sku Tier like Basic or Enterprise
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tier?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceType?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * List of features/user capabilities associated with the sku
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly capabilities?: SKUCapability[];
  /**
   * The restrictions because of which SKU cannot be used. This is empty if there are no
   * restrictions.
   */
  restrictions?: Restriction[];
}

/**
 * A private link resource
 */
export interface PrivateLinkResource extends Resource {
  /**
   * The private link resource group id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly groupId?: string;
  /**
   * The private link resource required member names.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requiredMembers?: string[];
  /**
   * The private link resource Private link DNS zone name.
   */
  requiredZoneNames?: string[];
}

/**
 * A list of private link resources
 */
export interface PrivateLinkResourceListResult {
  /**
   * Array of private link resources
   */
  value?: PrivateLinkResource[];
}

/**
 * The error details.
 */
export interface ServiceResponseBaseError extends MachineLearningServiceError {
}

/**
 * Contains the possible cases for ServiceResponseBase.
 */
export type ServiceResponseBaseUnion = ServiceResponseBase | ACIServiceResponse | AKSVariantResponseUnion;

/**
 * The base service response. The correct inherited response based on computeType will be returned
 * (ex. ACIServiceResponse)
 */
export interface ServiceResponseBase {
  /**
   * Polymorphic Discriminator
   */
  computeType: "ServiceResponseBase";
  /**
   * The service description.
   */
  description?: string;
  /**
   * The service tag dictionary. Tags are mutable.
   */
  kvTags?: { [propertyName: string]: string };
  /**
   * The service property dictionary. Properties are immutable.
   */
  properties?: { [propertyName: string]: string };
  /**
   * The current state of the service. Possible values include: 'Transitioning', 'Healthy',
   * 'Unhealthy', 'Failed', 'Unschedulable'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: WebServiceState;
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: ServiceResponseBaseError;
  /**
   * The deployment type for the service. Possible values include: 'GRPCRealtimeEndpoint',
   * 'HttpRealtimeEndpoint', 'Batch'
   */
  deploymentType?: DeploymentType;
}

/**
 * Machine Learning service object wrapped into ARM resource envelope.
 */
export interface ServiceResource extends Resource {
  /**
   * Service properties
   */
  properties?: ServiceResponseBaseUnion;
}

/**
 * The resource requirements for the container (cpu and memory).
 */
export interface ContainerResourceRequirements {
  /**
   * The minimum amount of CPU cores to be used by the container. More info:
   * https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   */
  cpu?: number;
  /**
   * The maximum amount of CPU cores allowed to be used by the container. More info:
   * https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   */
  cpuLimit?: number;
  /**
   * The minimum amount of memory (in GB) to be used by the container. More info:
   * https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   */
  memoryInGB?: number;
  /**
   * The maximum amount of memory (in GB) allowed to be used by the container. More info:
   * https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
   */
  memoryInGBLimit?: number;
  /**
   * The number of GPU cores in the container.
   */
  gpu?: number;
  /**
   * The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.
   */
  fpga?: number;
}

/**
 * The Model data collection properties.
 */
export interface ModelDataCollection {
  /**
   * Option for enabling/disabling Event Hub.
   */
  eventHubEnabled?: boolean;
  /**
   * Option for enabling/disabling storage.
   */
  storageEnabled?: boolean;
}

/**
 * Details of the data collection options specified.
 */
export interface ACIServiceResponseDataCollection extends ModelDataCollection {
}

/**
 * The dataset reference object.
 */
export interface DatasetReference {
  /**
   * The name of the dataset reference.
   */
  name?: string;
  /**
   * The id of the dataset reference.
   */
  id?: string;
}

/**
 * An Azure Machine Learning Model.
 */
export interface Model {
  /**
   * The Model Id.
   */
  id?: string;
  /**
   * The Model name.
   */
  name: string;
  /**
   * The Model framework.
   */
  framework?: string;
  /**
   * The Model framework version.
   */
  frameworkVersion?: string;
  /**
   * The Model version assigned by Model Management Service.
   */
  version?: number;
  /**
   * The list of datasets associated with the model.
   */
  datasets?: DatasetReference[];
  /**
   * The URL of the Model. Usually a SAS URL.
   */
  url: string;
  /**
   * The MIME type of Model content. For more details about MIME type, please open
   * https://www.iana.org/assignments/media-types/media-types.xhtml
   */
  mimeType: string;
  /**
   * The Model description text.
   */
  description?: string;
  /**
   * The Model creation time (UTC).
   */
  createdTime?: Date;
  /**
   * The Model last modified time (UTC).
   */
  modifiedTime?: Date;
  /**
   * Indicates whether we need to unpack the Model during docker Image creation.
   */
  unpack?: boolean;
  /**
   * The Parent Model Id.
   */
  parentModelId?: string;
  /**
   * The RunId that created this model.
   */
  runId?: string;
  /**
   * The name of the experiment where this model was created.
   */
  experimentName?: string;
  /**
   * The Model tag dictionary. Items are mutable.
   */
  kvTags?: { [propertyName: string]: string };
  /**
   * The Model property dictionary. Properties are immutable.
   */
  properties?: { [propertyName: string]: string };
  /**
   * Models derived from this model
   */
  derivedModelIds?: string[];
  /**
   * Sample Input Data for the Model. A reference to a dataset in the workspace in the format
   * aml://dataset/{datasetId}
   */
  sampleInputData?: string;
  /**
   * Sample Output Data for the Model. A reference to a dataset in the workspace in the format
   * aml://dataset/{datasetId}
   */
  sampleOutputData?: string;
  /**
   * Resource requirements for the model
   */
  resourceRequirements?: ContainerResourceRequirements;
}

/**
 * Request to create a Docker image based on Environment.
 */
export interface EnvironmentImageResponse {
  /**
   * The name of the driver file.
   */
  driverProgram?: string;
  /**
   * The list of assets.
   */
  assets?: ImageAsset[];
  /**
   * The list of model Ids.
   */
  modelIds?: string[];
  /**
   * The list of models.
   */
  modelsProperty?: Model[];
  /**
   * The details of the AZURE ML environment.
   */
  environment?: EnvironmentImageResponseEnvironment;
  /**
   * The unique identifying details of the AZURE ML environment.
   */
  environmentReference?: EnvironmentImageResponseEnvironmentReference;
}

/**
 * The Environment, models and assets used for inferencing.
 */
export interface ACIServiceResponseEnvironmentImageRequest extends EnvironmentImageResponse {
}

/**
 * An interface representing VnetConfiguration.
 */
export interface VnetConfiguration {
  /**
   * The name of the virtual network.
   */
  vnetName?: string;
  /**
   * The name of the virtual network subnet.
   */
  subnetName?: string;
}

/**
 * The virtual network configuration.
 */
export interface ACIServiceResponseVnetConfiguration extends VnetConfiguration {
}

/**
 * An interface representing EncryptionProperties.
 */
export interface EncryptionProperties {
  /**
   * vault base Url
   */
  vaultBaseUrl: string;
  /**
   * Encryption Key name
   */
  keyName: string;
  /**
   * Encryption Key Version
   */
  keyVersion: string;
}

/**
 * The encryption properties.
 */
export interface ACIServiceResponseEncryptionProperties extends EncryptionProperties {
}

/**
 * The response for an ACI service.
 */
export interface ACIServiceResponse {
  /**
   * Polymorphic Discriminator
   */
  computeType: "ACI";
  /**
   * The service description.
   */
  description?: string;
  /**
   * The service tag dictionary. Tags are mutable.
   */
  kvTags?: { [propertyName: string]: string };
  /**
   * The service property dictionary. Properties are immutable.
   */
  properties?: { [propertyName: string]: string };
  /**
   * The current state of the service. Possible values include: 'Transitioning', 'Healthy',
   * 'Unhealthy', 'Failed', 'Unschedulable'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: WebServiceState;
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: ServiceResponseBaseError;
  /**
   * The deployment type for the service. Possible values include: 'GRPCRealtimeEndpoint',
   * 'HttpRealtimeEndpoint', 'Batch'
   */
  deploymentType?: DeploymentType;
  /**
   * The container resource requirements.
   */
  containerResourceRequirements?: ContainerResourceRequirements;
  /**
   * The Uri for sending scoring requests.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly scoringUri?: string;
  /**
   * The name of the Azure location/region.
   */
  location?: string;
  /**
   * Whether or not authentication is enabled on the service.
   */
  authEnabled?: boolean;
  /**
   * Whether or not SSL is enabled.
   */
  sslEnabled?: boolean;
  /**
   * Whether or not Application Insights is enabled.
   */
  appInsightsEnabled?: boolean;
  /**
   * Details of the data collection options specified.
   */
  dataCollection?: ACIServiceResponseDataCollection;
  /**
   * The public SSL certificate in PEM format to use if SSL is enabled.
   */
  sslCertificate?: string;
  /**
   * The public SSL key in PEM format for the certificate.
   */
  sslKey?: string;
  /**
   * The CName for the service.
   */
  cname?: string;
  /**
   * The public IP address for the service.
   */
  publicIp?: string;
  /**
   * The public Fqdn for the service.
   */
  publicFqdn?: string;
  /**
   * The Uri for sending swagger requests.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly swaggerUri?: string;
  /**
   * Details on the models and configurations.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly modelConfigMap?: { [propertyName: string]: any };
  /**
   * The list of models.
   */
  modelsProperty?: Model[];
  /**
   * The Environment, models and assets used for inferencing.
   */
  environmentImageRequest?: ACIServiceResponseEnvironmentImageRequest;
  /**
   * The virtual network configuration.
   */
  vnetConfiguration?: ACIServiceResponseVnetConfiguration;
  /**
   * The encryption properties.
   */
  encryptionProperties?: ACIServiceResponseEncryptionProperties;
}

/**
 * An Image asset.
 */
export interface ImageAsset {
  /**
   * The Asset Id.
   */
  id?: string;
  /**
   * The mime type.
   */
  mimeType?: string;
  /**
   * The Url of the Asset.
   */
  url?: string;
  /**
   * Whether the Asset is unpacked.
   */
  unpack?: boolean;
}

/**
 * An interface representing ModelEnvironmentDefinition.
 */
export interface ModelEnvironmentDefinition {
  /**
   * The name of the environment.
   */
  name?: string;
  /**
   * The environment version.
   */
  version?: string;
  /**
   * Settings for a Python environment.
   */
  python?: ModelEnvironmentDefinitionPython;
  /**
   * Definition of environment variables to be defined in the environment.
   */
  environmentVariables?: { [propertyName: string]: string };
  /**
   * The definition of a Docker container.
   */
  docker?: ModelEnvironmentDefinitionDocker;
  /**
   * The configuration for a Spark environment.
   */
  spark?: ModelEnvironmentDefinitionSpark;
  /**
   * Settings for a R environment.
   */
  r?: ModelEnvironmentDefinitionR;
  /**
   * The inferencing stack version added to the image. To avoid adding an inferencing stack, do not
   * set this value. Valid values: "latest".
   */
  inferencingStackVersion?: string;
}

/**
 * The details of the AZURE ML environment.
 */
export interface EnvironmentImageRequestEnvironment extends ModelEnvironmentDefinition {
}

/**
 * An interface representing EnvironmentReference.
 */
export interface EnvironmentReference {
  /**
   * Name of the environment.
   */
  name?: string;
  /**
   * Version of the environment.
   */
  version?: string;
}

/**
 * The unique identifying details of the AZURE ML environment.
 */
export interface EnvironmentImageRequestEnvironmentReference extends EnvironmentReference {
}

/**
 * Request to create a Docker image based on Environment.
 */
export interface EnvironmentImageRequest {
  /**
   * The name of the driver file.
   */
  driverProgram?: string;
  /**
   * The list of assets.
   */
  assets?: ImageAsset[];
  /**
   * The list of model Ids.
   */
  modelIds?: string[];
  /**
   * The list of models.
   */
  modelsProperty?: Model[];
  /**
   * The details of the AZURE ML environment.
   */
  environment?: EnvironmentImageRequestEnvironment;
  /**
   * The unique identifying details of the AZURE ML environment.
   */
  environmentReference?: EnvironmentImageRequestEnvironmentReference;
}

/**
 * An interface representing ModelEnvironmentDefinitionResponse.
 */
export interface ModelEnvironmentDefinitionResponse {
  /**
   * The name of the environment.
   */
  name?: string;
  /**
   * The environment version.
   */
  version?: string;
  /**
   * Settings for a Python environment.
   */
  python?: ModelEnvironmentDefinitionResponsePython;
  /**
   * Definition of environment variables to be defined in the environment.
   */
  environmentVariables?: { [propertyName: string]: string };
  /**
   * The definition of a Docker container.
   */
  docker?: ModelEnvironmentDefinitionResponseDocker;
  /**
   * The configuration for a Spark environment.
   */
  spark?: ModelEnvironmentDefinitionResponseSpark;
  /**
   * Settings for a R environment.
   */
  r?: ModelEnvironmentDefinitionResponseR;
  /**
   * The inferencing stack version added to the image. To avoid adding an inferencing stack, do not
   * set this value. Valid values: "latest".
   */
  inferencingStackVersion?: string;
}

/**
 * The details of the AZURE ML environment.
 */
export interface EnvironmentImageResponseEnvironment extends ModelEnvironmentDefinitionResponse {
}

/**
 * The unique identifying details of the AZURE ML environment.
 */
export interface EnvironmentImageResponseEnvironmentReference extends EnvironmentReference {
}

/**
 * An interface representing ModelPythonSection.
 */
export interface ModelPythonSection {
  /**
   * The python interpreter path to use if an environment build is not required. The path specified
   * gets used to call the user script.
   */
  interpreterPath?: string;
  /**
   * True means that AzureML reuses an existing python environment; False means that AzureML will
   * create a python environment based on the Conda dependencies specification.
   */
  userManagedDependencies?: boolean;
  /**
   * A JObject containing Conda dependencies.
   */
  condaDependencies?: any;
  baseCondaEnvironment?: string;
}

/**
 * Settings for a Python environment.
 */
export interface ModelEnvironmentDefinitionPython extends ModelPythonSection {
}

/**
 * An interface representing ModelDockerSection.
 */
export interface ModelDockerSection {
  /**
   * Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
   */
  baseImage?: string;
  /**
   * Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
   */
  baseDockerfile?: string;
  /**
   * Image registry that contains the base image.
   */
  baseImageRegistry?: ModelDockerSectionBaseImageRegistry;
}

/**
 * The definition of a Docker container.
 */
export interface ModelEnvironmentDefinitionDocker extends ModelDockerSection {
}

/**
 * An interface representing ModelSparkSection.
 */
export interface ModelSparkSection {
  /**
   * The list of spark repositories.
   */
  repositories?: string[];
  /**
   * The Spark packages to use.
   */
  packages?: SparkMavenPackage[];
  /**
   * Whether to precache the packages.
   */
  precachePackages?: boolean;
}

/**
 * The configuration for a Spark environment.
 */
export interface ModelEnvironmentDefinitionSpark extends ModelSparkSection {
}

/**
 * An interface representing RSection.
 */
export interface RSection {
  /**
   * The version of R to be installed
   */
  rVersion?: string;
  /**
   * Indicates whether the environment is managed by user or by AzureML.
   */
  userManaged?: boolean;
  /**
   * The Rscript path to use if an environment build is not required.
   * The path specified gets used to call the user script.
   */
  rscriptPath?: string;
  /**
   * Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
   */
  snapshotDate?: string;
  /**
   * The CRAN packages to use.
   */
  cranPackages?: RCranPackage[];
  /**
   * The packages directly from GitHub.
   */
  gitHubPackages?: RGitHubPackage[];
  /**
   * The packages from custom urls.
   */
  customUrlPackages?: string[];
  /**
   * The packages from Bioconductor.
   */
  bioConductorPackages?: string[];
}

/**
 * Settings for a R environment.
 */
export interface ModelEnvironmentDefinitionR extends RSection {
}

/**
 * Settings for a Python environment.
 */
export interface ModelEnvironmentDefinitionResponsePython extends ModelPythonSection {
}

/**
 * An interface representing ModelDockerSectionResponse.
 */
export interface ModelDockerSectionResponse {
  /**
   * Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile.
   */
  baseImage?: string;
  /**
   * Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage.
   */
  baseDockerfile?: string;
  /**
   * Image registry that contains the base image.
   */
  baseImageRegistry?: ModelDockerSectionResponseBaseImageRegistry;
}

/**
 * The definition of a Docker container.
 */
export interface ModelEnvironmentDefinitionResponseDocker extends ModelDockerSectionResponse {
}

/**
 * The configuration for a Spark environment.
 */
export interface ModelEnvironmentDefinitionResponseSpark extends ModelSparkSection {
}

/**
 * An interface representing RSectionResponse.
 */
export interface RSectionResponse {
  /**
   * The version of R to be installed
   */
  rVersion?: string;
  /**
   * Indicates whether the environment is managed by user or by AzureML.
   */
  userManaged?: boolean;
  /**
   * The Rscript path to use if an environment build is not required.
   * The path specified gets used to call the user script.
   */
  rscriptPath?: string;
  /**
   * Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. "2019-04-17"
   */
  snapshotDate?: string;
  /**
   * The CRAN packages to use.
   */
  cranPackages?: RCranPackage[];
  /**
   * The packages directly from GitHub.
   */
  gitHubPackages?: RGitHubPackageResponse[];
  /**
   * The packages from custom urls.
   */
  customUrlPackages?: string[];
  /**
   * The packages from Bioconductor.
   */
  bioConductorPackages?: string[];
}

/**
 * Settings for a R environment.
 */
export interface ModelEnvironmentDefinitionResponseR extends RSectionResponse {
}

/**
 * An interface representing ContainerRegistry.
 */
export interface ContainerRegistry {
  address?: string;
  username?: string;
  password?: string;
}

/**
 * An interface representing ContainerRegistryResponse.
 */
export interface ContainerRegistryResponse {
  address?: string;
}

/**
 * Image registry that contains the base image.
 */
export interface ModelDockerSectionBaseImageRegistry extends ContainerRegistry {
}

/**
 * Image registry that contains the base image.
 */
export interface ModelDockerSectionResponseBaseImageRegistry extends ContainerRegistryResponse {
}

/**
 * An interface representing SparkMavenPackage.
 */
export interface SparkMavenPackage {
  group?: string;
  artifact?: string;
  version?: string;
}

/**
 * An interface representing RCranPackage.
 */
export interface RCranPackage {
  /**
   * The package name.
   */
  name?: string;
  /**
   * The repository name.
   */
  repository?: string;
}

/**
 * An interface representing RGitHubPackage.
 */
export interface RGitHubPackage {
  /**
   * Repository address in the format username/repo[/subdir][@ref|#pull].
   */
  repository?: string;
  /**
   * Personal access token to install from a private repo
   */
  authToken?: string;
}

/**
 * An interface representing RGitHubPackageResponse.
 */
export interface RGitHubPackageResponse {
  /**
   * Repository address in the format username/repo[/subdir][@ref|#pull].
   */
  repository?: string;
}

/**
 * Contains the possible cases for AKSVariantResponse.
 */
export type AKSVariantResponseUnion = AKSVariantResponse | AKSServiceResponse;

/**
 * The response for an AKS variant.
 */
export interface AKSVariantResponse {
  /**
   * Polymorphic Discriminator
   */
  computeType: "Custom";
  /**
   * The service description.
   */
  description?: string;
  /**
   * The service tag dictionary. Tags are mutable.
   */
  kvTags?: { [propertyName: string]: string };
  /**
   * The service property dictionary. Properties are immutable.
   */
  properties?: { [propertyName: string]: string };
  /**
   * The current state of the service. Possible values include: 'Transitioning', 'Healthy',
   * 'Unhealthy', 'Failed', 'Unschedulable'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: WebServiceState;
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: ServiceResponseBaseError;
  /**
   * The deployment type for the service. Possible values include: 'GRPCRealtimeEndpoint',
   * 'HttpRealtimeEndpoint', 'Batch'
   */
  deploymentType?: DeploymentType;
  /**
   * Is this the default variant.
   */
  isDefault?: boolean;
  /**
   * The amount of traffic variant receives.
   */
  trafficPercentile?: number;
  /**
   * The type of the variant. Possible values include: 'Control', 'Treatment'
   */
  type?: VariantType;
}

/**
 * The Auto Scaler properties.
 */
export interface AutoScaler {
  /**
   * Option to enable/disable auto scaling.
   */
  autoscaleEnabled?: boolean;
  /**
   * The minimum number of replicas to scale down to.
   */
  minReplicas?: number;
  /**
   * The maximum number of replicas in the cluster.
   */
  maxReplicas?: number;
  /**
   * The target utilization percentage to use for determining whether to scale the cluster.
   */
  targetUtilization?: number;
  /**
   * The amount of seconds to wait between auto scale updates.
   */
  refreshPeriodInSeconds?: number;
}

/**
 * The error details.
 */
export interface AKSReplicaStatusError extends MachineLearningServiceError {
}

/**
 * An interface representing AKSReplicaStatus.
 */
export interface AKSReplicaStatus {
  /**
   * The desired number of replicas.
   */
  desiredReplicas?: number;
  /**
   * The number of updated replicas.
   */
  updatedReplicas?: number;
  /**
   * The number of available replicas.
   */
  availableReplicas?: number;
  /**
   * The error details.
   */
  error?: AKSReplicaStatusError;
}

/**
 * The liveness probe requirements.
 */
export interface LivenessProbeRequirements {
  /**
   * The number of failures to allow before returning an unhealthy status.
   */
  failureThreshold?: number;
  /**
   * The number of successful probes before returning a healthy status.
   */
  successThreshold?: number;
  /**
   * The probe timeout in seconds.
   */
  timeoutSeconds?: number;
  /**
   * The length of time between probes in seconds.
   */
  periodSeconds?: number;
  /**
   * The delay before the first probe in seconds.
   */
  initialDelaySeconds?: number;
}

/**
 * Details of the data collection options specified.
 */
export interface AKSServiceResponseDataCollection extends ModelDataCollection {
}

/**
 * The auto scaler properties.
 */
export interface AKSServiceResponseAutoScaler extends AutoScaler {
}

/**
 * The deployment status.
 */
export interface AKSServiceResponseDeploymentStatus extends AKSReplicaStatus {
}

/**
 * The liveness probe requirements.
 */
export interface AKSServiceResponseLivenessProbeRequirements extends LivenessProbeRequirements {
}

/**
 * The Environment, models and assets used for inferencing.
 */
export interface AKSServiceResponseEnvironmentImageRequest extends EnvironmentImageResponse {
}

/**
 * The response for an AKS service.
 */
export interface AKSServiceResponse {
  /**
   * Polymorphic Discriminator
   */
  computeType: "AKS";
  /**
   * The service description.
   */
  description?: string;
  /**
   * The service tag dictionary. Tags are mutable.
   */
  kvTags?: { [propertyName: string]: string };
  /**
   * The service property dictionary. Properties are immutable.
   */
  properties?: { [propertyName: string]: string };
  /**
   * The current state of the service. Possible values include: 'Transitioning', 'Healthy',
   * 'Unhealthy', 'Failed', 'Unschedulable'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: WebServiceState;
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: ServiceResponseBaseError;
  /**
   * The deployment type for the service. Possible values include: 'GRPCRealtimeEndpoint',
   * 'HttpRealtimeEndpoint', 'Batch'
   */
  deploymentType?: DeploymentType;
  /**
   * Is this the default variant.
   */
  isDefault?: boolean;
  /**
   * The amount of traffic variant receives.
   */
  trafficPercentile?: number;
  /**
   * The type of the variant. Possible values include: 'Control', 'Treatment'
   */
  type?: VariantType;
  /**
   * The list of models.
   */
  modelsProperty?: Model[];
  /**
   * The container resource requirements.
   */
  containerResourceRequirements?: ContainerResourceRequirements;
  /**
   * The maximum number of concurrent requests per container.
   */
  maxConcurrentRequestsPerContainer?: number;
  /**
   * Maximum time a request will wait in the queue (in milliseconds). After this time, the service
   * will return 503 (Service Unavailable)
   */
  maxQueueWaitMs?: number;
  /**
   * The name of the compute resource.
   */
  computeName?: string;
  /**
   * The Kubernetes namespace of the deployment.
   */
  namespace?: string;
  /**
   * The number of replicas on the cluster.
   */
  numReplicas?: number;
  /**
   * Details of the data collection options specified.
   */
  dataCollection?: AKSServiceResponseDataCollection;
  /**
   * Whether or not Application Insights is enabled.
   */
  appInsightsEnabled?: boolean;
  /**
   * The auto scaler properties.
   */
  autoScaler?: AKSServiceResponseAutoScaler;
  /**
   * The Uri for sending scoring requests.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly scoringUri?: string;
  /**
   * The deployment status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deploymentStatus?: AKSServiceResponseDeploymentStatus;
  /**
   * The scoring timeout in milliseconds.
   */
  scoringTimeoutMs?: number;
  /**
   * The liveness probe requirements.
   */
  livenessProbeRequirements?: AKSServiceResponseLivenessProbeRequirements;
  /**
   * Whether or not authentication is enabled.
   */
  authEnabled?: boolean;
  /**
   * Whether or not AAD authentication is enabled.
   */
  aadAuthEnabled?: boolean;
  /**
   * The Uri for sending swagger requests.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly swaggerUri?: string;
  /**
   * Details on the models and configurations.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly modelConfigMap?: { [propertyName: string]: any };
  /**
   * The Environment, models and assets used for inferencing.
   */
  environmentImageRequest?: AKSServiceResponseEnvironmentImageRequest;
}

/**
 * An interface representing AuthKeys.
 */
export interface AuthKeys {
  /**
   * The primary key.
   */
  primaryKey?: string;
  /**
   * The secondary key.
   */
  secondaryKey?: string;
}

/**
 * The authentication keys.
 */
export interface CreateServiceRequestKeys extends AuthKeys {
}

/**
 * The Environment, models and assets needed for inferencing.
 */
export interface CreateServiceRequestEnvironmentImageRequest extends EnvironmentImageRequest {
}

/**
 * Contains the possible cases for CreateServiceRequest.
 */
export type CreateServiceRequestUnion = CreateServiceRequest | ACIServiceCreateRequest | CreateEndpointVariantRequestUnion;

/**
 * The base class for creating a service.
 */
export interface CreateServiceRequest {
  /**
   * Polymorphic Discriminator
   */
  computeType: "CreateServiceRequest";
  /**
   * The description of the service.
   */
  description?: string;
  /**
   * The service tag dictionary. Tags are mutable.
   */
  kvTags?: { [propertyName: string]: string };
  /**
   * The service properties dictionary. Properties are immutable.
   */
  properties?: { [propertyName: string]: string };
  /**
   * The authentication keys.
   */
  keys?: CreateServiceRequestKeys;
  /**
   * The Environment, models and assets needed for inferencing.
   */
  environmentImageRequest?: CreateServiceRequestEnvironmentImageRequest;
  /**
   * The name of the Azure location/region.
   */
  location?: string;
}

/**
 * Details of the data collection options specified.
 */
export interface ACIServiceCreateRequestDataCollection extends ModelDataCollection {
}

/**
 * The virtual network configuration.
 */
export interface ACIServiceCreateRequestVnetConfiguration extends VnetConfiguration {
}

/**
 * The encryption properties.
 */
export interface ACIServiceCreateRequestEncryptionProperties extends EncryptionProperties {
}

/**
 * An interface representing ACIServiceCreateRequest.
 */
export interface ACIServiceCreateRequest {
  /**
   * Polymorphic Discriminator
   */
  computeType: "ACI";
  /**
   * The description of the service.
   */
  description?: string;
  /**
   * The service tag dictionary. Tags are mutable.
   */
  kvTags?: { [propertyName: string]: string };
  /**
   * The service properties dictionary. Properties are immutable.
   */
  properties?: { [propertyName: string]: string };
  /**
   * The authentication keys.
   */
  keys?: CreateServiceRequestKeys;
  /**
   * The Environment, models and assets needed for inferencing.
   */
  environmentImageRequest?: CreateServiceRequestEnvironmentImageRequest;
  /**
   * The name of the Azure location/region.
   */
  location?: string;
  /**
   * The container resource requirements.
   */
  containerResourceRequirements?: ContainerResourceRequirements;
  /**
   * Whether or not authentication is enabled on the service. Default value: false.
   */
  authEnabled?: boolean;
  /**
   * Whether or not SSL is enabled. Default value: false.
   */
  sslEnabled?: boolean;
  /**
   * Whether or not Application Insights is enabled. Default value: false.
   */
  appInsightsEnabled?: boolean;
  /**
   * Details of the data collection options specified.
   */
  dataCollection?: ACIServiceCreateRequestDataCollection;
  /**
   * The public SSL certificate in PEM format to use if SSL is enabled.
   */
  sslCertificate?: string;
  /**
   * The public SSL key in PEM format for the certificate.
   */
  sslKey?: string;
  /**
   * The CName for the service.
   */
  cname?: string;
  /**
   * The Dns label for the service.
   */
  dnsNameLabel?: string;
  /**
   * The virtual network configuration.
   */
  vnetConfiguration?: ACIServiceCreateRequestVnetConfiguration;
  /**
   * The encryption properties.
   */
  encryptionProperties?: ACIServiceCreateRequestEncryptionProperties;
}

/**
 * Details of the data collection options specified.
 */
export interface AKSServiceCreateRequestDataCollection extends ModelDataCollection {
}

/**
 * The auto scaler properties.
 */
export interface AKSServiceCreateRequestAutoScaler extends AutoScaler {
}

/**
 * The liveness probe requirements.
 */
export interface AKSServiceCreateRequestLivenessProbeRequirements extends LivenessProbeRequirements {
}

/**
 * Contains the possible cases for CreateEndpointVariantRequest.
 */
export type CreateEndpointVariantRequestUnion = CreateEndpointVariantRequest | AKSServiceCreateRequest;

/**
 * The Variant properties.
 */
export interface CreateEndpointVariantRequest {
  /**
   * Polymorphic Discriminator
   */
  computeType: "Custom";
  /**
   * The description of the service.
   */
  description?: string;
  /**
   * The service tag dictionary. Tags are mutable.
   */
  kvTags?: { [propertyName: string]: string };
  /**
   * The service properties dictionary. Properties are immutable.
   */
  properties?: { [propertyName: string]: string };
  /**
   * The authentication keys.
   */
  keys?: CreateServiceRequestKeys;
  /**
   * The Environment, models and assets needed for inferencing.
   */
  environmentImageRequest?: CreateServiceRequestEnvironmentImageRequest;
  /**
   * The name of the Azure location/region.
   */
  location?: string;
  /**
   * Is this the default variant.
   */
  isDefault?: boolean;
  /**
   * The amount of traffic variant receives.
   */
  trafficPercentile?: number;
  /**
   * The type of the variant. Possible values include: 'Control', 'Treatment'
   */
  type?: VariantType;
}

/**
 * The request to create an AKS service.
 */
export interface AKSServiceCreateRequest {
  /**
   * Polymorphic Discriminator
   */
  computeType: "AKS";
  /**
   * The description of the service.
   */
  description?: string;
  /**
   * The service tag dictionary. Tags are mutable.
   */
  kvTags?: { [propertyName: string]: string };
  /**
   * The service properties dictionary. Properties are immutable.
   */
  properties?: { [propertyName: string]: string };
  /**
   * The authentication keys.
   */
  keys?: CreateServiceRequestKeys;
  /**
   * The Environment, models and assets needed for inferencing.
   */
  environmentImageRequest?: CreateServiceRequestEnvironmentImageRequest;
  /**
   * The name of the Azure location/region.
   */
  location?: string;
  /**
   * Is this the default variant.
   */
  isDefault?: boolean;
  /**
   * The amount of traffic variant receives.
   */
  trafficPercentile?: number;
  /**
   * The type of the variant. Possible values include: 'Control', 'Treatment'
   */
  type?: VariantType;
  /**
   * The number of replicas on the cluster.
   */
  numReplicas?: number;
  /**
   * Details of the data collection options specified.
   */
  dataCollection?: AKSServiceCreateRequestDataCollection;
  /**
   * The name of the compute resource.
   */
  computeName?: string;
  /**
   * Whether or not Application Insights is enabled.
   */
  appInsightsEnabled?: boolean;
  /**
   * The auto scaler properties.
   */
  autoScaler?: AKSServiceCreateRequestAutoScaler;
  /**
   * The container resource requirements.
   */
  containerResourceRequirements?: ContainerResourceRequirements;
  /**
   * The maximum number of concurrent requests per container.
   */
  maxConcurrentRequestsPerContainer?: number;
  /**
   * Maximum time a request will wait in the queue (in milliseconds). After this time, the service
   * will return 503 (Service Unavailable)
   */
  maxQueueWaitMs?: number;
  /**
   * Kubernetes namespace for the service.
   */
  namespace?: string;
  /**
   * The scoring timeout in milliseconds.
   */
  scoringTimeoutMs?: number;
  /**
   * Whether or not authentication is enabled.
   */
  authEnabled?: boolean;
  /**
   * The liveness probe requirements.
   */
  livenessProbeRequirements?: AKSServiceCreateRequestLivenessProbeRequirements;
  /**
   * Whether or not AAD authentication is enabled.
   */
  aadAuthEnabled?: boolean;
}

/**
 * An interface representing ListStorageAccountKeysResult.
 */
export interface ListStorageAccountKeysResult {
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly userStorageKey?: string;
}

/**
 * Workspace connection.
 */
export interface WorkspaceConnection extends BaseResource {
  /**
   * ResourceId of the workspace connection.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Friendly name of the workspace connection.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type of workspace connection.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Category of the workspace connection.
   */
  category?: string;
  /**
   * Target of the workspace connection.
   */
  target?: string;
  /**
   * Authorization type of the workspace connection.
   */
  authType?: string;
  /**
   * Value details of the workspace connection.
   */
  value?: string;
  /**
   * format for the workspace connection value. Possible values include: 'JSON'
   */
  valueFormat?: ValueFormat;
}

/**
 * object used for creating workspace connection.
 */
export interface WorkspaceConnectionDto {
  /**
   * Friendly name of the workspace connection
   */
  name?: string;
  /**
   * Category of the workspace connection.
   */
  category?: string;
  /**
   * Target of the workspace connection.
   */
  target?: string;
  /**
   * Authorization type of the workspace connection.
   */
  authType?: string;
  /**
   * Value details of the workspace connection.
   */
  value?: string;
  /**
   * format for the workspace connection value. Possible values include: 'JSON'
   */
  valueFormat?: ValueFormat;
}

/**
 * An interface representing CodeContainer.
 */
export interface CodeContainer {
  properties?: { [propertyName: string]: string };
  tags?: { [propertyName: string]: string };
  description?: string;
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemDataModel {
  /**
   * The identity that created the resource.
   */
  createdBy?: string;
  /**
   * The type of identity that created the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  createdByType?: CreatedByType;
  /**
   * The timestamp of resource creation (UTC).
   */
  createdAt?: Date;
  /**
   * The identity that last modified the resource.
   */
  lastModifiedBy?: string;
  /**
   * The type of identity that last modified the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  lastModifiedByType?: CreatedByType;
  /**
   * The type of identity that last modified the resource.
   */
  lastModifiedAt?: Date;
}

/**
 * System data associated with resource provider
 */
export interface CodeContainerResourceSystemData extends SystemDataModel {
}

/**
 * Azure Resource Manager resource envelope.
 */
export interface CodeContainerResource extends BaseResource {
  /**
   * The resource URL of the entity (not URL encoded).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource entity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The resource provider and type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  properties?: { [propertyName: string]: string };
  tags?: { [propertyName: string]: string };
  description?: string;
  /**
   * System data associated with resource provider
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: CodeContainerResourceSystemData;
}

/**
 * An interface representing InnerErrorResponse.
 */
export interface InnerErrorResponse {
  code?: string;
  innerError?: InnerErrorResponseInnerError;
}

/**
 * An interface representing InnerErrorResponseInnerError.
 */
export interface InnerErrorResponseInnerError extends InnerErrorResponse {
}

/**
 * An interface representing RootErrorInnerError.
 */
export interface RootErrorInnerError extends InnerErrorResponse {
}

/**
 * An interface representing RootError.
 */
export interface RootError {
  code?: string;
  severity?: number;
  message?: string;
  messageFormat?: string;
  messageParameters?: { [propertyName: string]: string };
  referenceCode?: string;
  detailsUri?: string;
  target?: string;
  details?: RootError[];
  innerError?: RootErrorInnerError;
}

/**
 * Details of an AssetUri.
 */
export interface AssetPath {
  /**
   * The path of file/directory.
   */
  path: string;
  /**
   * Whether the path defines a directory or a single file.
   */
  isDirectory?: boolean;
}

/**
 * Details of asset path in the datastore.
 */
export interface CodeVersionAssetPath extends AssetPath {
}

/**
 * Details of an RegisteredCode
 */
export interface CodeVersion {
  /**
   * The asset datastoreId
   */
  datastoreId?: string;
  /**
   * Details of asset path in the datastore.
   */
  assetPath?: CodeVersionAssetPath;
  /**
   * The asset description text.
   */
  description?: string;
  /**
   * Tag dictionary. Tags can be added, removed, and updated.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The asset property dictionary.
   */
  properties?: { [propertyName: string]: string };
}

/**
 * System data associated with resource provider
 */
export interface CodeVersionResourceSystemData extends SystemDataModel {
}

/**
 * Azure Resource Manager resource envelope.
 */
export interface CodeVersionResource extends BaseResource {
  /**
   * The resource URL of the entity (not URL encoded).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource entity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The resource provider and type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The asset datastoreId
   */
  datastoreId?: string;
  /**
   * Details of asset path in the datastore.
   */
  assetPath?: CodeVersionAssetPath;
  /**
   * The asset description text.
   */
  description?: string;
  /**
   * Tag dictionary. Tags can be added, removed, and updated.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The asset property dictionary.
   */
  properties?: { [propertyName: string]: string };
  /**
   * System data associated with resource provider
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: CodeVersionResourceSystemData;
}

/**
 * An interface representing DataContainer.
 */
export interface DataContainer {
  properties?: { [propertyName: string]: string };
  tags?: { [propertyName: string]: string };
  description?: string;
}

/**
 * System data associated with resource provider
 */
export interface DataContainerResourceSystemData extends SystemDataModel {
}

/**
 * Azure Resource Manager resource envelope.
 */
export interface DataContainerResource extends BaseResource {
  /**
   * The resource URL of the entity (not URL encoded).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource entity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The resource provider and type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  properties?: { [propertyName: string]: string };
  tags?: { [propertyName: string]: string };
  description?: string;
  /**
   * System data associated with resource provider
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: DataContainerResourceSystemData;
}

/**
 * An interface representing AccountKeySection.
 */
export interface AccountKeySection {
  /**
   * Storage account key.
   */
  key?: string;
}

/**
 * An interface representing CertificateSection.
 */
export interface CertificateSection {
  /**
   * Authority URL used for authentication.
   */
  authorityUrl?: string;
  /**
   * Resource the service principal has access to.
   */
  resourceUri?: string;
  /**
   * ID of the tenant to which the service principal belongs.
   */
  tenantId: string;
  /**
   * Service principal client ID.
   */
  clientId: string;
  /**
   * Service principal certificate.
   */
  certificate?: string;
  /**
   * Thumbprint of the certificate used for authentication.
   */
  thumbprint: string;
}

/**
 * An interface representing SasSection.
 */
export interface SasSection {
  /**
   * Storage container SAS token.
   */
  sasToken?: string;
}

/**
 * An interface representing ServicePrincipalSection.
 */
export interface ServicePrincipalSection {
  /**
   * Authority URL used for authentication.
   */
  authorityUrl?: string;
  /**
   * Resource the service principal has access to.
   */
  resourceUri?: string;
  /**
   * ID of the tenant to which the service principal belongs.
   */
  tenantId: string;
  /**
   * Service principal client ID.
   */
  clientId: string;
  /**
   * Service principal secret.
   */
  clientSecret?: string;
}

/**
 * An interface representing SqlAdminSection.
 */
export interface SqlAdminSection {
  /**
   * SQL database user name.
   */
  userId: string;
  /**
   * SQL database password.
   */
  password?: string;
}

/**
 * Storage account key authentication.
 */
export interface DatastoreCredentialsAccountKey extends AccountKeySection {
}

/**
 * Service principal certificate authentication.
 */
export interface DatastoreCredentialsCertificate extends CertificateSection {
}

/**
 * Storage container SAS token authentication.
 */
export interface DatastoreCredentialsSas extends SasSection {
}

/**
 * Service principal password authentication.
 */
export interface DatastoreCredentialsServicePrincipal extends ServicePrincipalSection {
}

/**
 * SQL user/password authentication.
 */
export interface DatastoreCredentialsSqlAdmin extends SqlAdminSection {
}

/**
 * An interface representing DatastoreCredentials.
 */
export interface DatastoreCredentials {
  /**
   * Credential type used to authentication with storage. Possible values include: 'AccountKey',
   * 'Certificate', 'None', 'Sas', 'ServicePrincipal', 'SqlAdmin'
   */
  type: CredentialsType;
  /**
   * Storage account key authentication.
   */
  accountKey?: DatastoreCredentialsAccountKey;
  /**
   * Service principal certificate authentication.
   */
  certificate?: DatastoreCredentialsCertificate;
  /**
   * Storage container SAS token authentication.
   */
  sas?: DatastoreCredentialsSas;
  /**
   * Service principal password authentication.
   */
  servicePrincipal?: DatastoreCredentialsServicePrincipal;
  /**
   * SQL user/password authentication.
   */
  sqlAdmin?: DatastoreCredentialsSqlAdmin;
}

/**
 * Azure Data Lake credentials.
 */
export interface AzureDataLakeSectionCredentials extends DatastoreCredentials {
}

/**
 * An interface representing AzureDataLakeSection.
 */
export interface AzureDataLakeSection {
  /**
   * Azure Data Lake credentials.
   */
  credentials: AzureDataLakeSectionCredentials;
  /**
   * Azure Data Lake store name.
   */
  storeName: string;
}

/**
 * Azure SQL database credentials.
 */
export interface AzureMySqlSectionCredentials extends DatastoreCredentials {
}

/**
 * An interface representing AzureMySqlSection.
 */
export interface AzureMySqlSection {
  /**
   * Azure SQL database credentials.
   */
  credentials: AzureMySqlSectionCredentials;
  /**
   * Azure SQL database name.
   */
  databaseName: string;
  /**
   * Azure cloud endpoint for the database.
   */
  endpoint: string;
  /**
   * Azure SQL server port.
   */
  portNumber: number;
  /**
   * Azure SQL server name.
   */
  serverName: string;
}

/**
 * Azure SQL database credentials.
 */
export interface AzurePostgreSqlSectionCredentials extends DatastoreCredentials {
}

/**
 * An interface representing AzurePostgreSqlSection.
 */
export interface AzurePostgreSqlSection {
  /**
   * Whether the Azure PostgreSQL server requires SSL.
   */
  enableSSL?: boolean;
  /**
   * Azure SQL database credentials.
   */
  credentials: AzurePostgreSqlSectionCredentials;
  /**
   * Azure SQL database name.
   */
  databaseName: string;
  /**
   * Azure cloud endpoint for the database.
   */
  endpoint: string;
  /**
   * Azure SQL server port.
   */
  portNumber: number;
  /**
   * Azure SQL server name.
   */
  serverName: string;
}

/**
 * Azure SQL database credentials.
 */
export interface AzureSqlDatabaseSectionCredentials extends DatastoreCredentials {
}

/**
 * An interface representing AzureSqlDatabaseSection.
 */
export interface AzureSqlDatabaseSection {
  /**
   * Azure SQL database credentials.
   */
  credentials: AzureSqlDatabaseSectionCredentials;
  /**
   * Azure SQL database name.
   */
  databaseName: string;
  /**
   * Azure cloud endpoint for the database.
   */
  endpoint: string;
  /**
   * Azure SQL server port.
   */
  portNumber: number;
  /**
   * Azure SQL server name.
   */
  serverName: string;
}

/**
 * Storage account credentials.
 */
export interface AzureStorageSectionCredentials extends DatastoreCredentials {
}

/**
 * An interface representing AzureStorageSection.
 */
export interface AzureStorageSection {
  /**
   * Storage account name.
   */
  accountName: string;
  /**
   * Blob storage cache timeout.
   */
  blobCacheTimeout?: number;
  /**
   * Storage account container name.
   */
  containerName: string;
  /**
   * Storage account credentials.
   */
  credentials: AzureStorageSectionCredentials;
  /**
   * Azure cloud endpoint for the storage account.
   */
  endpoint: string;
  /**
   * Protocol used to communicate with the storage account.
   */
  protocol: string;
}

/**
 * An interface representing GlusterFsSection.
 */
export interface GlusterFsSection {
  /**
   * GlusterFS server address (can be the IP address or server name).
   */
  serverAddress: string;
  /**
   * GlusterFS volume name.
   */
  volumeName: string;
}

/**
 * Azure Data Lake (Gen1/2) storage information.
 */
export interface DatastoreContentsAzureDataLake extends AzureDataLakeSection {
}

/**
 * Azure Database for MySQL information.
 */
export interface DatastoreContentsAzureMySql extends AzureMySqlSection {
}

/**
 * Azure Database for PostgreSQL information.
 */
export interface DatastoreContentsAzurePostgreSql extends AzurePostgreSqlSection {
}

/**
 * Azure SQL Database information.
 */
export interface DatastoreContentsAzureSqlDatabase extends AzureSqlDatabaseSection {
}

/**
 * Azure storage account (blobs, files) information.
 */
export interface DatastoreContentsAzureStorage extends AzureStorageSection {
}

/**
 * GlusterFS volume information.
 */
export interface DatastoreContentsGlusterFs extends GlusterFsSection {
}

/**
 * An interface representing DatastoreContents.
 */
export interface DatastoreContents {
  /**
   * Storage type backing the datastore. Possible values include: 'AzureBlob', 'AzureDataLake',
   * 'AzureDataLakeGen2', 'AzureFile', 'AzureMySql', 'AzurePostgreSql', 'AzureSqlDatabase',
   * 'GlusterFs'
   */
  type: ContentsType;
  /**
   * Azure Data Lake (Gen1/2) storage information.
   */
  azureDataLake?: DatastoreContentsAzureDataLake;
  /**
   * Azure Database for MySQL information.
   */
  azureMySql?: DatastoreContentsAzureMySql;
  /**
   * Azure Database for PostgreSQL information.
   */
  azurePostgreSql?: DatastoreContentsAzurePostgreSql;
  /**
   * Azure SQL Database information.
   */
  azureSqlDatabase?: DatastoreContentsAzureSqlDatabase;
  /**
   * Azure storage account (blobs, files) information.
   */
  azureStorage?: DatastoreContentsAzureStorage;
  /**
   * GlusterFS volume information.
   */
  glusterFs?: DatastoreContentsGlusterFs;
}

/**
 * An interface representing LinkedInfo.
 */
export interface LinkedInfo {
  /**
   * Linked service ID.
   */
  linkedId?: string;
  /**
   * Linked service resource name.
   */
  linkedResourceName?: string;
  /**
   * Type of the linked service. Possible values include: 'Synapse'
   */
  origin?: OriginType;
}

/**
 * Reference to the datastore storage contents.
 */
export interface DatastorePropertiesContents extends DatastoreContents {
}

/**
 * Information about the datastore origin, if linked.
 */
export interface DatastorePropertiesLinkedInfo extends LinkedInfo {
}

/**
 * An interface representing DatastoreProperties.
 */
export interface DatastoreProperties {
  /**
   * Reference to the datastore storage contents.
   */
  contents: DatastorePropertiesContents;
  /**
   * Whether the service has validated access to the datastore with the provided credentials.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hasBeenValidated?: boolean;
  /**
   * Whether this datastore is the default for the workspace.
   */
  isDefault?: boolean;
  /**
   * Information about the datastore origin, if linked.
   */
  linkedInfo?: DatastorePropertiesLinkedInfo;
  properties?: { [propertyName: string]: string };
  /**
   * The asset description text.
   */
  description?: string;
  /**
   * Tag dictionary. Tags can be added, removed, and updated.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * System data associated with resource provider
 */
export interface DatastorePropertiesResourceSystemData extends SystemDataModel {
}

/**
 * Azure Resource Manager resource envelope.
 */
export interface DatastorePropertiesResource extends BaseResource {
  /**
   * The resource URL of the entity (not URL encoded).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource entity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The resource provider and type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Reference to the datastore storage contents.
   */
  contents: DatastorePropertiesContents;
  /**
   * Whether the service has validated access to the datastore with the provided credentials.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hasBeenValidated?: boolean;
  /**
   * Whether this datastore is the default for the workspace.
   */
  isDefault?: boolean;
  /**
   * Information about the datastore origin, if linked.
   */
  linkedInfo?: DatastorePropertiesLinkedInfo;
  properties?: { [propertyName: string]: string };
  /**
   * The asset description text.
   */
  description?: string;
  /**
   * Tag dictionary. Tags can be added, removed, and updated.
   */
  tags?: { [propertyName: string]: string };
  /**
   * System data associated with resource provider
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: DatastorePropertiesResourceSystemData;
}

/**
 * Details of asset path in the datastore.
 */
export interface DataVersionAssetPath extends AssetPath {
}

/**
 * Details of an DatasetDto
 */
export interface DataVersion {
  /**
   * The Format of dataset. Possible values include: 'Simple', 'Dataflow'
   */
  datasetType?: DatasetType;
  /**
   * The asset datastoreId
   */
  datastoreId?: string;
  /**
   * Details of asset path in the datastore.
   */
  assetPath?: DataVersionAssetPath;
  /**
   * The asset description text.
   */
  description?: string;
  /**
   * Tag dictionary. Tags can be added, removed, and updated.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The asset property dictionary.
   */
  properties?: { [propertyName: string]: string };
}

/**
 * System data associated with resource provider
 */
export interface DataVersionResourceSystemData extends SystemDataModel {
}

/**
 * Azure Resource Manager resource envelope.
 */
export interface DataVersionResource extends BaseResource {
  /**
   * The resource URL of the entity (not URL encoded).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource entity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The resource provider and type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The Format of dataset. Possible values include: 'Simple', 'Dataflow'
   */
  datasetType?: DatasetType;
  /**
   * The asset datastoreId
   */
  datastoreId?: string;
  /**
   * Details of asset path in the datastore.
   */
  assetPath?: DataVersionAssetPath;
  /**
   * The asset description text.
   */
  description?: string;
  /**
   * Tag dictionary. Tags can be added, removed, and updated.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The asset property dictionary.
   */
  properties?: { [propertyName: string]: string };
  /**
   * System data associated with resource provider
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: DataVersionResourceSystemData;
}

/**
 * An interface representing EnvironmentContainer.
 */
export interface EnvironmentContainer {
  properties?: { [propertyName: string]: string };
  tags?: { [propertyName: string]: string };
  description?: string;
}

/**
 * System data associated with resource provider
 */
export interface EnvironmentContainerResourceSystemData extends SystemDataModel {
}

/**
 * Azure Resource Manager resource envelope.
 */
export interface EnvironmentContainerResource extends BaseResource {
  /**
   * The resource URL of the entity (not URL encoded).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource entity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The resource provider and type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  properties?: { [propertyName: string]: string };
  tags?: { [propertyName: string]: string };
  description?: string;
  /**
   * System data associated with resource provider
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: EnvironmentContainerResourceSystemData;
}

/**
 * Class to represent configuration settings for Docker
 */
export interface DockerSpecification {
  /**
   * Polymorphic Discriminator
   */
  type: "DockerSpecification";
}

/**
 * Details of asset path in the datastore.
 */
export interface EnvironmentSpecificationVersionAssetPath extends AssetPath {
}

/**
 * Data Transfer Object (DTO) for an Execution Environment Specification. Name and
 * version should default to the AzureML-Minimal environment version tested with the
 * current SDK client version as this is a main use-case.
 * <see href="https://repo2docker.readthedocs.io/en/latest/specification.html" />
 */
export interface EnvironmentSpecificationVersion {
  /**
   * Environment specification is either user managed or curated by the Azure ML service
   * <see
   * href="https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments"
   * />. Possible values include: 'Curated', 'UserCreated'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: EnvironmentSpecificationType;
  docker?: DockerSpecification;
  /**
   * Standard configuration file used by conda that lets you install any kind of package, including
   * Python, R, and C/C++ packages
   * <see
   * href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment"
   * />
   */
  condaFile?: string;
  /**
   * The asset datastoreId
   */
  datastoreId?: string;
  /**
   * Details of asset path in the datastore.
   */
  assetPath?: EnvironmentSpecificationVersionAssetPath;
  /**
   * The asset description text.
   */
  description?: string;
  /**
   * Tag dictionary. Tags can be added, removed, and updated.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The asset property dictionary.
   */
  properties?: { [propertyName: string]: string };
}

/**
 * System data associated with resource provider
 */
export interface EnvironmentSpecificationVersionResourceSystemData extends SystemDataModel {
}

/**
 * Azure Resource Manager resource envelope.
 */
export interface EnvironmentSpecificationVersionResource extends BaseResource {
  /**
   * The resource URL of the entity (not URL encoded).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource entity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The resource provider and type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Environment specification is either user managed or curated by the Azure ML service
   * <see
   * href="https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments"
   * />. Possible values include: 'Curated', 'UserCreated'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type1?: EnvironmentSpecificationType;
  docker?: DockerSpecification;
  /**
   * Standard configuration file used by conda that lets you install any kind of package, including
   * Python, R, and C/C++ packages
   * <see
   * href="https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment"
   * />
   */
  condaFile?: string;
  /**
   * The asset datastoreId
   */
  datastoreId?: string;
  /**
   * Details of asset path in the datastore.
   */
  assetPath?: EnvironmentSpecificationVersionAssetPath;
  /**
   * The asset description text.
   */
  description?: string;
  /**
   * Tag dictionary. Tags can be added, removed, and updated.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The asset property dictionary.
   */
  properties?: { [propertyName: string]: string };
  /**
   * System data associated with resource provider
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: EnvironmentSpecificationVersionResourceSystemData;
}

/**
 * An interface representing CodeConfiguration.
 */
export interface CodeConfiguration {
  /**
   * The ID of the code asset.
   */
  codeArtifactId?: string;
  /**
   * The command to execute on startup of the job. eg. ["python", "train.py"]
   */
  command: string;
}

/**
 * Data binding definition.
 */
export interface DataBinding {
  /**
   * Reference to source data artifact.
   */
  sourceDataReference?: string;
  /**
   * Location of data inside the container process.
   */
  localReference?: string;
  /**
   * Mechanism for accessing the data artifact. Possible values include: 'Mount', 'Download',
   * 'Upload'
   */
  mode?: DataBindingMode;
}

/**
 * An interface representing DistributionConfiguration.
 */
export interface DistributionConfiguration {
  /**
   * Polymorphic Discriminator
   */
  distributionType: "DistributionConfiguration";
}

/**
 * Compute binding definition.
 */
export interface ComputeBinding {
  /**
   * Resource ID of the compute resource.
   */
  computeId?: string;
  /**
   * Number of nodes.
   */
  nodeCount?: number;
  /**
   * Set to true for jobs running on local compute.
   */
  isLocal?: boolean;
}

/**
 * An interface representing JobOutput.
 */
export interface JobOutput {
  /**
   * ARM ID of the datastore where the job logs and artifacts are stored, or null for the default
   * container ("azureml") in the workspace's storage account.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly datastoreId?: string;
  /**
   * Path within the datastore to the job logs and artifacts.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly path?: string;
}

/**
 * Dictionary of endpoint URIs, keyed by enumerated job endpoints.
 * For local jobs, a job endpoint will have a value of FileStreamObject.
 */
export interface JobBaseInteractionEndpoints {
  tracking?: string;
  studio?: string;
  grafana?: string;
  tensorboard?: string;
  local?: string;
}

/**
 * Contains the possible cases for JobBase.
 */
export type JobBaseUnion = JobBase | ComputeJobBaseUnion;

/**
 * Job base definition
 */
export interface JobBase {
  /**
   * Polymorphic Discriminator
   */
  jobType: "JobBase";
  /**
   * Possible values include: 'Succeeded', 'Failed', 'Canceled'
   */
  provisioningState?: JobProvisioningState;
  /**
   * Dictionary of endpoint URIs, keyed by enumerated job endpoints.
   * For local jobs, a job endpoint will have a value of FileStreamObject.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly interactionEndpoints?: JobBaseInteractionEndpoints;
  /**
   * The asset description text.
   */
  description?: string;
  /**
   * Tag dictionary. Tags can be added, removed, and updated.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The asset property dictionary.
   */
  properties?: { [propertyName: string]: string };
}

/**
 * Compute binding for the job.
 */
export interface ComputeJobBaseComputeBinding extends ComputeBinding {
}

/**
 * Location of the job output logs and artifacts.
 */
export interface ComputeJobBaseOutput extends JobOutput {
}

/**
 * Contains the possible cases for ComputeJobBase.
 */
export type ComputeJobBaseUnion = ComputeJobBase | CommandJob | SweepJob;

/**
 * Compute job base definition
 */
export interface ComputeJobBase {
  /**
   * Polymorphic Discriminator
   */
  jobType: "ComputeJobBase";
  /**
   * Possible values include: 'Succeeded', 'Failed', 'Canceled'
   */
  provisioningState?: JobProvisioningState;
  /**
   * Dictionary of endpoint URIs, keyed by enumerated job endpoints.
   * For local jobs, a job endpoint will have a value of FileStreamObject.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly interactionEndpoints?: JobBaseInteractionEndpoints;
  /**
   * The asset description text.
   */
  description?: string;
  /**
   * Tag dictionary. Tags can be added, removed, and updated.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The asset property dictionary.
   */
  properties?: { [propertyName: string]: string };
  /**
   * The name of the experiment the job belongs to. If not set, the job is placed in the "Default"
   * experiment.
   */
  experimentName?: string;
  /**
   * Compute binding for the job.
   */
  computeBinding: ComputeJobBaseComputeBinding;
  /**
   * Location of the job output logs and artifacts.
   */
  output?: ComputeJobBaseOutput;
}

/**
 * Code configuration of the job.
 */
export interface CommandJobCodeConfiguration extends CodeConfiguration {
}

/**
 * Code Job definition
 */
export interface CommandJob {
  /**
   * Polymorphic Discriminator
   */
  jobType: "Command";
  /**
   * Possible values include: 'Succeeded', 'Failed', 'Canceled'
   */
  provisioningState?: JobProvisioningState;
  /**
   * Dictionary of endpoint URIs, keyed by enumerated job endpoints.
   * For local jobs, a job endpoint will have a value of FileStreamObject.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly interactionEndpoints?: JobBaseInteractionEndpoints;
  /**
   * The asset description text.
   */
  description?: string;
  /**
   * Tag dictionary. Tags can be added, removed, and updated.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The asset property dictionary.
   */
  properties?: { [propertyName: string]: string };
  /**
   * The name of the experiment the job belongs to. If not set, the job is placed in the "Default"
   * experiment.
   */
  experimentName?: string;
  /**
   * Compute binding for the job.
   */
  computeBinding: ComputeJobBaseComputeBinding;
  /**
   * Location of the job output logs and artifacts.
   */
  output?: ComputeJobBaseOutput;
  /**
   * Status of the job. Possible values include: 'NotStarted', 'Starting', 'Provisioning',
   * 'Preparing', 'Queued', 'Running', 'Finalizing', 'CancelRequested', 'Completed', 'Failed',
   * 'Canceled', 'NotResponding', 'Paused'
   */
  status?: JobStatus;
  /**
   * The max run duration in seconds, after which the job will be cancelled.
   */
  maxRunDurationSeconds?: number;
  /**
   * Code configuration of the job.
   */
  codeConfiguration: CommandJobCodeConfiguration;
  /**
   * Environment specification of the job.
   */
  environmentId?: string;
  /**
   * Mapping of data bindings used in the job.
   */
  dataBindings?: { [propertyName: string]: DataBinding };
  distributionConfiguration?: DistributionConfiguration;
  /**
   * Input parameters.
   */
  parameters?: { [propertyName: string]: any };
}

/**
 * class for all hyperparameter sampling algorithms
 */
export interface ParameterSamplingConfiguration {
  /**
   * A dictionary containing each parameter and its distribution. The dictionary key is the name of
   * the parameter
   */
  parameterSpace: any;
  /**
   * Type of the hyperparameter sampling algorithms. Possible values include: 'Grid', 'Random',
   * 'Bayesian'
   */
  samplingType: ParameterSamplingType;
}

/**
 * Early termination policies enable canceling poor-performing runs before they complete
 */
export interface EarlyTerminationPolicyConfiguration {
  /**
   * Polymorphic Discriminator
   */
  policyType: "EarlyTerminationPolicyConfiguration";
  evaluationInterval?: number;
  delayEvaluation?: number;
}

/**
 * An interface representing TerminationConfiguration.
 */
export interface TerminationConfiguration {
  maxTotalRuns?: number;
  maxConcurrentRuns?: number;
  maxDurationMinutes?: number;
  earlyTerminationPolicyConfiguration?: EarlyTerminationPolicyConfiguration;
}

/**
 * An interface representing EvaluationConfiguration.
 */
export interface EvaluationConfiguration {
  primaryMetricName: string;
  /**
   * Defines supported metric goals for hyperparameter tuning. Possible values include: 'Minimize',
   * 'Maximize'
   */
  primaryMetricGoal: PrimaryMetricGoal;
}

/**
 * Code configuration of the job.
 */
export interface TrialComponentCodeConfiguration extends CodeConfiguration {
}

/**
 * An interface representing TrialComponent.
 */
export interface TrialComponent {
  /**
   * Code configuration of the job.
   */
  codeConfiguration?: TrialComponentCodeConfiguration;
  /**
   * Environment id of the job.
   */
  environmentId?: string;
  /**
   * Mapping of data bindings used in the job.
   */
  dataBindings?: { [propertyName: string]: DataBinding };
  distributionConfiguration?: DistributionConfiguration;
}

/**
 * class for all hyperparameter sampling algorithms
 */
export interface SweepJobParameterSamplingConfiguration extends ParameterSamplingConfiguration {
}

/**
 * An interface representing SweepJobTerminationConfiguration.
 */
export interface SweepJobTerminationConfiguration extends TerminationConfiguration {
}

/**
 * An interface representing SweepJobEvaluationConfiguration.
 */
export interface SweepJobEvaluationConfiguration extends EvaluationConfiguration {
}

/**
 * An interface representing SweepJobTrialComponent.
 */
export interface SweepJobTrialComponent extends TrialComponent {
}

/**
 * An interface representing SweepJob.
 */
export interface SweepJob {
  /**
   * Polymorphic Discriminator
   */
  jobType: "Sweep";
  /**
   * Possible values include: 'Succeeded', 'Failed', 'Canceled'
   */
  provisioningState?: JobProvisioningState;
  /**
   * Dictionary of endpoint URIs, keyed by enumerated job endpoints.
   * For local jobs, a job endpoint will have a value of FileStreamObject.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly interactionEndpoints?: JobBaseInteractionEndpoints;
  /**
   * The asset description text.
   */
  description?: string;
  /**
   * Tag dictionary. Tags can be added, removed, and updated.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The asset property dictionary.
   */
  properties?: { [propertyName: string]: string };
  /**
   * The name of the experiment the job belongs to. If not set, the job is placed in the "Default"
   * experiment.
   */
  experimentName?: string;
  /**
   * Compute binding for the job.
   */
  computeBinding: ComputeJobBaseComputeBinding;
  /**
   * Location of the job output logs and artifacts.
   */
  output?: ComputeJobBaseOutput;
  /**
   * The status of a job. Possible values include: 'NotStarted', 'Starting', 'Provisioning',
   * 'Preparing', 'Queued', 'Running', 'Finalizing', 'CancelRequested', 'Completed', 'Failed',
   * 'Canceled', 'NotResponding', 'Paused'
   */
  status?: JobStatus;
  /**
   * class for all hyperparameter sampling algorithms
   */
  parameterSamplingConfiguration: SweepJobParameterSamplingConfiguration;
  terminationConfiguration?: SweepJobTerminationConfiguration;
  evaluationConfiguration: SweepJobEvaluationConfiguration;
  trialComponent?: SweepJobTrialComponent;
}

/**
 * Label class definition
 */
export interface LabelClass {
  /**
   * Display name of the label class.
   */
  displayName?: string;
  /**
   * Dictionary of subclasses of the label class.
   */
  subclasses?: { [propertyName: string]: LabelClass };
}

/**
 * System data associated with resource provider
 */
export interface JobBaseResourceSystemData extends SystemDataModel {
}

/**
 * Azure Resource Manager resource envelope.
 */
export interface JobBaseResource extends BaseResource {
  /**
   * The resource URL of the entity (not URL encoded).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource entity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The resource provider and type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  properties: JobBaseUnion;
  /**
   * System data associated with resource provider
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: JobBaseResourceSystemData;
}

/**
 * Details of asset path in the datastore.
 */
export interface ModelVersionAssetPath extends AssetPath {
}

/**
 * Details of an ModelDto
 */
export interface ModelVersion {
  /**
   * Model asset stage.
   */
  stage?: string;
  /**
   * The asset datastoreId
   */
  datastoreId?: string;
  /**
   * Details of asset path in the datastore.
   */
  assetPath?: ModelVersionAssetPath;
  /**
   * The asset description text.
   */
  description?: string;
  /**
   * Tag dictionary. Tags can be added, removed, and updated.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The asset property dictionary.
   */
  properties?: { [propertyName: string]: string };
}

/**
 * System data associated with resource provider
 */
export interface ModelVersionResourceSystemData extends SystemDataModel {
}

/**
 * Azure Resource Manager resource envelope.
 */
export interface ModelVersionResource extends BaseResource {
  /**
   * The resource URL of the entity (not URL encoded).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource entity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The resource provider and type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Model asset stage.
   */
  stage?: string;
  /**
   * The asset datastoreId
   */
  datastoreId?: string;
  /**
   * Details of asset path in the datastore.
   */
  assetPath?: ModelVersionAssetPath;
  /**
   * The asset description text.
   */
  description?: string;
  /**
   * Tag dictionary. Tags can be added, removed, and updated.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The asset property dictionary.
   */
  properties?: { [propertyName: string]: string };
  /**
   * System data associated with resource provider
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: ModelVersionResourceSystemData;
}

/**
 * An interface representing ModelContainer.
 */
export interface ModelContainer {
  /**
   * Latest model versions for each stage.
   */
  latestVersions?: ModelVersionResource[];
  /**
   * The asset description text.
   */
  description?: string;
  /**
   * Tag dictionary. Tags can be added, removed, and updated.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The asset property dictionary.
   */
  properties?: { [propertyName: string]: string };
}

/**
 * System data associated with resource provider
 */
export interface ModelContainerResourceSystemData extends SystemDataModel {
}

/**
 * Azure Resource Manager resource envelope.
 */
export interface ModelContainerResource extends BaseResource {
  /**
   * The resource URL of the entity (not URL encoded).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource entity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The resource provider and type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Latest model versions for each stage.
   */
  latestVersions?: ModelVersionResource[];
  /**
   * The asset description text.
   */
  description?: string;
  /**
   * Tag dictionary. Tags can be added, removed, and updated.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The asset property dictionary.
   */
  properties?: { [propertyName: string]: string };
  /**
   * System data associated with resource provider
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: ModelContainerResourceSystemData;
}

/**
 * Azure Resource Manager resource envelope.
 */
export interface Body extends BaseResource {
}

/**
 * Optional Parameters.
 */
export interface WorkspacesListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
}

/**
 * Optional Parameters.
 */
export interface WorkspacesListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
}

/**
 * Optional Parameters.
 */
export interface WorkspacesListByResourceGroupNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
}

/**
 * Optional Parameters.
 */
export interface WorkspacesListBySubscriptionNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
}

/**
 * Optional Parameters.
 */
export interface MachineLearningComputeListByWorkspaceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
}

/**
 * Optional Parameters.
 */
export interface MachineLearningComputeListByWorkspaceNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
}

/**
 * Optional Parameters.
 */
export interface MachineLearningServiceListByWorkspaceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
  /**
   * The Model Id.
   */
  modelId?: string;
  /**
   * The Model name.
   */
  modelName?: string;
  /**
   * The object tag.
   */
  tag?: string;
  /**
   * A set of tags with which to filter the returned services. It is a comma separated string of
   * tags key or tags key=value Example: tagKey1,tagKey2,tagKey3=value3 .
   */
  tags?: string;
  /**
   * A set of properties with which to filter the returned services. It is a comma separated string
   * of properties key and/or properties key=value Example: propKey1,propKey2,propKey3=value3 .
   */
  properties?: string;
  /**
   * runId for model associated with service.
   */
  runId?: string;
  /**
   * Set to True to include Model details.
   */
  expand?: boolean;
  /**
   * The option to order the response. Possible values include: 'CreatedAtDesc', 'CreatedAtAsc',
   * 'UpdatedAtDesc', 'UpdatedAtAsc'. Default value: 'UpdatedAtDesc'.
   */
  orderby?: OrderString;
}

/**
 * Optional Parameters.
 */
export interface MachineLearningServiceGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Set to True to include Model details. Default value: false.
   */
  expand?: boolean;
}

/**
 * Optional Parameters.
 */
export interface MachineLearningServiceListByWorkspaceNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
  /**
   * The Model Id.
   */
  modelId?: string;
  /**
   * The Model name.
   */
  modelName?: string;
  /**
   * The object tag.
   */
  tag?: string;
  /**
   * A set of tags with which to filter the returned services. It is a comma separated string of
   * tags key or tags key=value Example: tagKey1,tagKey2,tagKey3=value3 .
   */
  tags?: string;
  /**
   * A set of properties with which to filter the returned services. It is a comma separated string
   * of properties key and/or properties key=value Example: propKey1,propKey2,propKey3=value3 .
   */
  properties?: string;
  /**
   * runId for model associated with service.
   */
  runId?: string;
  /**
   * Set to True to include Model details.
   */
  expand?: boolean;
  /**
   * The option to order the response. Possible values include: 'CreatedAtDesc', 'CreatedAtAsc',
   * 'UpdatedAtDesc', 'UpdatedAtAsc'. Default value: 'UpdatedAtDesc'.
   */
  orderby?: OrderString;
}

/**
 * Optional Parameters.
 */
export interface WorkspaceConnectionsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Target of the workspace connection.
   */
  target?: string;
  /**
   * Category of the workspace connection.
   */
  category?: string;
}

/**
 * Optional Parameters.
 */
export interface CodeContainersCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Container entity to create or update.
   */
  body?: Body;
}

/**
 * Optional Parameters.
 */
export interface CodeContainersListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
}

/**
 * Optional Parameters.
 */
export interface CodeContainersListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
}

/**
 * Optional Parameters.
 */
export interface CodeVersionsCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Version entity to create or update.
   */
  body?: Body;
}

/**
 * Optional Parameters.
 */
export interface CodeVersionsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
}

/**
 * Optional Parameters.
 */
export interface CodeVersionsListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
}

/**
 * Optional Parameters.
 */
export interface DataContainersCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Container entity to create or update.
   */
  body?: Body;
}

/**
 * Optional Parameters.
 */
export interface DataContainersListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
}

/**
 * Optional Parameters.
 */
export interface DataContainersListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
}

/**
 * Optional Parameters.
 */
export interface DatastoresListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
  /**
   * Maximum number of results to return. Default value: 30.
   */
  count?: number;
  /**
   * Filter down to the workspace default datastore.
   */
  isDefault?: boolean;
  /**
   * Names of datastores to return.
   */
  names?: string[];
  /**
   * Text to search for in the datastore names.
   */
  searchText?: string;
  /**
   * Order by property (createdtime | modifiedtime | name).
   */
  orderBy?: string;
  /**
   * Order by property in ascending order. Default value: false.
   */
  orderByAsc?: boolean;
}

/**
 * Optional Parameters.
 */
export interface DatastoresListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
  /**
   * Maximum number of results to return. Default value: 30.
   */
  count?: number;
  /**
   * Filter down to the workspace default datastore.
   */
  isDefault?: boolean;
  /**
   * Names of datastores to return.
   */
  names?: string[];
  /**
   * Text to search for in the datastore names.
   */
  searchText?: string;
  /**
   * Order by property (createdtime | modifiedtime | name).
   */
  orderBy?: string;
  /**
   * Order by property in ascending order. Default value: false.
   */
  orderByAsc?: boolean;
}

/**
 * Optional Parameters.
 */
export interface DataVersionsCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Version entity to create or update.
   */
  body?: Body;
}

/**
 * Optional Parameters.
 */
export interface DataVersionsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
}

/**
 * Optional Parameters.
 */
export interface DataVersionsListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
}

/**
 * Optional Parameters.
 */
export interface EnvironmentContainersCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Container entity to create or update.
   */
  body?: Body;
}

/**
 * Optional Parameters.
 */
export interface EnvironmentContainersListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
}

/**
 * Optional Parameters.
 */
export interface EnvironmentContainersListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
}

/**
 * Optional Parameters.
 */
export interface EnvironmentSpecificationVersionsCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Definition of EnvironmentSpecificationVersion.
   */
  body?: Body;
}

/**
 * Optional Parameters.
 */
export interface EnvironmentSpecificationVersionsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Order by filter.
   */
  orderby?: string;
  /**
   * Top filter.
   */
  top?: string;
  /**
   * Continuation token for pagination.
   */
  skip?: string;
}

/**
 * Optional Parameters.
 */
export interface EnvironmentSpecificationVersionsListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Order by filter.
   */
  orderby?: string;
  /**
   * Top filter.
   */
  top?: string;
  /**
   * Continuation token for pagination.
   */
  skip?: string;
}

/**
 * Optional Parameters.
 */
export interface JobsCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Job definition object.
   */
  body?: Body;
}

/**
 * Optional Parameters.
 */
export interface JobsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
  /**
   * Type of job to be returned.
   */
  jobType?: string;
  /**
   * Tags for job to be returned.
   */
  tags?: string;
  /**
   * Jobs returned will have this tag key.
   */
  tag?: string;
}

/**
 * Optional Parameters.
 */
export interface JobsListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
  /**
   * Type of job to be returned.
   */
  jobType?: string;
  /**
   * Tags for job to be returned.
   */
  tags?: string;
  /**
   * Jobs returned will have this tag key.
   */
  tag?: string;
}

/**
 * Optional Parameters.
 */
export interface ModelContainersListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
  /**
   * Maximum number of results to return.
   */
  count?: number;
}

/**
 * Optional Parameters.
 */
export interface ModelContainersCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Container entity to create or update.
   */
  body?: Body;
}

/**
 * Optional Parameters.
 */
export interface ModelContainersListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
  /**
   * Maximum number of results to return.
   */
  count?: number;
}

/**
 * Optional Parameters.
 */
export interface ModelVersionsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
  /**
   * Model version.
   */
  version?: string;
  /**
   * Model description.
   */
  description?: string;
  /**
   * Maximum number of results to return.
   */
  count?: number;
  /**
   * Number of initial results to skip.
   */
  offset?: number;
  /**
   * Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2
   */
  tags?: string;
  /**
   * Comma-separated list of property names (and optionally values). Example: prop1,prop2=value2
   */
  properties?: string;
  /**
   * Property by which to order the results.
   */
  orderBy?: string;
  /**
   * Only return the most recent version of a model. Default value: false.
   */
  latestVersionOnly?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ModelVersionsCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Version entity to create or update.
   */
  body?: Body;
}

/**
 * Optional Parameters.
 */
export interface ModelVersionsListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skip?: string;
  /**
   * Model version.
   */
  version?: string;
  /**
   * Model description.
   */
  description?: string;
  /**
   * Maximum number of results to return.
   */
  count?: number;
  /**
   * Number of initial results to skip.
   */
  offset?: number;
  /**
   * Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2
   */
  tags?: string;
  /**
   * Comma-separated list of property names (and optionally values). Example: prop1,prop2=value2
   */
  properties?: string;
  /**
   * Property by which to order the results.
   */
  orderBy?: string;
  /**
   * Only return the most recent version of a model. Default value: false.
   */
  latestVersionOnly?: boolean;
}

/**
 * An interface representing AzureMachineLearningWorkspacesOptions.
 */
export interface AzureMachineLearningWorkspacesOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface MachineLearningComputeCreateOrUpdateHeaders {
  /**
   * URI to poll for asynchronous operation status.
   */
  azureAsyncOperation: string;
}

/**
 * Defines headers for Delete operation.
 */
export interface MachineLearningComputeDeleteHeaders {
  /**
   * URI to poll for asynchronous operation status.
   */
  azureAsyncOperation: string;
  /**
   * URI to poll for asynchronous operation result.
   */
  location: string;
}

/**
 * Defines headers for CreateOrUpdate operation.
 */
export interface MachineLearningServiceCreateOrUpdateHeaders {
  /**
   * URI to poll for asynchronous operation status.
   */
  azureAsyncOperation: string;
}

/**
 * Defines headers for Delete operation.
 */
export interface JobsDeleteHeaders {
  /**
   * URI to poll for asynchronous operation result.
   */
  location: string;
  /**
   * Duration the client should wait between requests, in seconds.
   */
  retryAfter: number;
}

/**
 * @interface
 * An array of operations supported by the resource provider.
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
}

/**
 * @interface
 * The result of a request to list machine learning workspaces.
 * @extends Array<Workspace>
 */
export interface WorkspaceListResult extends Array<Workspace> {
  /**
   * The URI that can be used to request the next list of machine learning workspaces.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Aml user feature operation response.
 * @extends Array<AmlUserFeature>
 */
export interface ListAmlUserFeatureResult extends Array<AmlUserFeature> {
  /**
   * The URI to fetch the next page of AML user features information. Call ListNext() with this to
   * fetch the next page of AML user features information.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The List Usages operation response.
 * @extends Array<Usage>
 */
export interface ListUsagesResult extends Array<Usage> {
  /**
   * The URI to fetch the next page of AML resource usage information. Call ListNext() with this to
   * fetch the next page of AML resource usage information.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The List WorkspaceQuotasByVMFamily operation response.
 * @extends Array<ResourceQuota>
 */
export interface ListWorkspaceQuotas extends Array<ResourceQuota> {
  /**
   * The URI to fetch the next page of workspace quota information by VM Family. Call ListNext()
   * with this to fetch the next page of Workspace Quota information.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Paginated list of Machine Learning compute objects wrapped in ARM resource envelope.
 * @extends Array<ComputeResource>
 */
export interface PaginatedComputeResourcesList extends Array<ComputeResource> {
  /**
   * A continuation link (absolute URI) to the next page of results in the list.
   */
  nextLink?: string;
}

/**
 * @interface
 * Compute node information related to a AmlCompute.
 * @extends Array<AmlComputeNodeInformation>
 */
export interface AmlComputeNodesInformation extends Array<AmlComputeNodeInformation> {
  /**
   * Polymorphic Discriminator
   */
  computeType: "AmlCompute";
  /**
   * The continuation token.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
  /**
   * The collection of returned AmlCompute nodes details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nodes?: AmlComputeNodeInformation[];
}

/**
 * @interface
 * List of skus with features
 * @extends Array<WorkspaceSku>
 */
export interface SkuListResult extends Array<WorkspaceSku> {
  /**
   * The URI to fetch the next page of Workspace Skus. Call ListNext() with this URI to fetch the
   * next page of Workspace Skus
   */
  nextLink?: string;
}

/**
 * @interface
 * Paginated list of Machine Learning service objects wrapped in ARM resource envelope.
 * @extends Array<ServiceResource>
 */
export interface PaginatedServiceList extends Array<ServiceResource> {
  /**
   * A continuation link (absolute URI) to the next page of results in the list.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Paginated list of Workspace connection objects.
 * @extends Array<WorkspaceConnection>
 */
export interface PaginatedWorkspaceConnectionsList extends Array<WorkspaceConnection> {
  /**
   * A continuation link (absolute URI) to the next page of results in the list.
   */
  nextLink?: string;
}

/**
 * @interface
 * A paginated list of CodeContainer entities.
 * @extends Array<CodeContainerResource>
 */
export interface CodeContainerResourceArmPaginatedResult extends Array<CodeContainerResource> {
  nextLink?: string;
}

/**
 * @interface
 * A paginated list of CodeVersion entities.
 * @extends Array<CodeVersionResource>
 */
export interface CodeVersionResourceArmPaginatedResult extends Array<CodeVersionResource> {
  nextLink?: string;
}

/**
 * @interface
 * A paginated list of DataContainer entities.
 * @extends Array<DataContainerResource>
 */
export interface DataContainerResourceArmPaginatedResult extends Array<DataContainerResource> {
  nextLink?: string;
}

/**
 * @interface
 * A paginated list of DatastoreProperties entities.
 * @extends Array<DatastorePropertiesResource>
 */
export interface DatastorePropertiesResourceArmPaginatedResult extends Array<DatastorePropertiesResource> {
  nextLink?: string;
}

/**
 * @interface
 * A paginated list of DataVersion entities.
 * @extends Array<DataVersionResource>
 */
export interface DataVersionResourceArmPaginatedResult extends Array<DataVersionResource> {
  nextLink?: string;
}

/**
 * @interface
 * A paginated list of EnvironmentContainer entities.
 * @extends Array<EnvironmentContainerResource>
 */
export interface EnvironmentContainerResourceArmPaginatedResult extends Array<EnvironmentContainerResource> {
  nextLink?: string;
}

/**
 * @interface
 * A paginated list of EnvironmentSpecificationVersion entities.
 * @extends Array<EnvironmentSpecificationVersionResource>
 */
export interface EnvironmentSpecificationVersionResourceArmPaginatedResult extends Array<EnvironmentSpecificationVersionResource> {
  nextLink?: string;
}

/**
 * @interface
 * A paginated list of JobBase entities.
 * @extends Array<JobBaseResource>
 */
export interface JobBaseResourceArmPaginatedResult extends Array<JobBaseResource> {
  nextLink?: string;
}

/**
 * @interface
 * A paginated list of ModelContainer entities.
 * @extends Array<ModelContainerResource>
 */
export interface ModelContainerResourceArmPaginatedResult extends Array<ModelContainerResource> {
  nextLink?: string;
}

/**
 * @interface
 * A paginated list of ModelVersion entities.
 * @extends Array<ModelVersionResource>
 */
export interface ModelVersionResourceArmPaginatedResult extends Array<ModelVersionResource> {
  nextLink?: string;
}

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Unknown', 'Updating', 'Creating', 'Deleting', 'Succeeded', 'Failed',
 * 'Canceled'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Unknown' | 'Updating' | 'Creating' | 'Deleting' | 'Succeeded' | 'Failed' | 'Canceled';

/**
 * Defines values for EncryptionStatus.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type EncryptionStatus = 'Enabled' | 'Disabled';

/**
 * Defines values for PrivateEndpointServiceConnectionStatus.
 * Possible values include: 'Pending', 'Approved', 'Rejected', 'Disconnected', 'Timeout'
 * @readonly
 * @enum {string}
 */
export type PrivateEndpointServiceConnectionStatus = 'Pending' | 'Approved' | 'Rejected' | 'Disconnected' | 'Timeout';

/**
 * Defines values for PrivateEndpointConnectionProvisioningState.
 * Possible values include: 'Succeeded', 'Creating', 'Deleting', 'Failed'
 * @readonly
 * @enum {string}
 */
export type PrivateEndpointConnectionProvisioningState = 'Succeeded' | 'Creating' | 'Deleting' | 'Failed';

/**
 * Defines values for ResourceIdentityType.
 * Possible values include: 'SystemAssigned', 'SystemAssigned,UserAssigned', 'UserAssigned', 'None'
 * @readonly
 * @enum {string}
 */
export type ResourceIdentityType = 'SystemAssigned' | 'SystemAssigned,UserAssigned' | 'UserAssigned' | 'None';

/**
 * Defines values for UsageUnit.
 * Possible values include: 'Count'
 * @readonly
 * @enum {string}
 */
export type UsageUnit = 'Count';

/**
 * Defines values for VMPriceOSType.
 * Possible values include: 'Linux', 'Windows'
 * @readonly
 * @enum {string}
 */
export type VMPriceOSType = 'Linux' | 'Windows';

/**
 * Defines values for VMTier.
 * Possible values include: 'Standard', 'LowPriority', 'Spot'
 * @readonly
 * @enum {string}
 */
export type VMTier = 'Standard' | 'LowPriority' | 'Spot';

/**
 * Defines values for QuotaUnit.
 * Possible values include: 'Count'
 * @readonly
 * @enum {string}
 */
export type QuotaUnit = 'Count';

/**
 * Defines values for Status.
 * Possible values include: 'Undefined', 'Success', 'Failure', 'InvalidQuotaBelowClusterMinimum',
 * 'InvalidQuotaExceedsSubscriptionLimit', 'InvalidVMFamilyName', 'OperationNotSupportedForSku',
 * 'OperationNotEnabledForRegion'
 * @readonly
 * @enum {string}
 */
export type Status = 'Undefined' | 'Success' | 'Failure' | 'InvalidQuotaBelowClusterMinimum' | 'InvalidQuotaExceedsSubscriptionLimit' | 'InvalidVMFamilyName' | 'OperationNotSupportedForSku' | 'OperationNotEnabledForRegion';

/**
 * Defines values for IdentityType.
 * Possible values include: 'user', 'application', 'managedIdentity', 'key'
 * @readonly
 * @enum {string}
 */
export type IdentityType = 'user' | 'application' | 'managedIdentity' | 'key';

/**
 * Defines values for ClusterPurpose.
 * Possible values include: 'FastProd', 'DenseProd', 'DevTest'
 * @readonly
 * @enum {string}
 */
export type ClusterPurpose = 'FastProd' | 'DenseProd' | 'DevTest';

/**
 * Defines values for OsType.
 * Possible values include: 'Linux', 'Windows'
 * @readonly
 * @enum {string}
 */
export type OsType = 'Linux' | 'Windows';

/**
 * Defines values for VmPriority.
 * Possible values include: 'Dedicated', 'LowPriority'
 * @readonly
 * @enum {string}
 */
export type VmPriority = 'Dedicated' | 'LowPriority';

/**
 * Defines values for RemoteLoginPortPublicAccess.
 * Possible values include: 'Enabled', 'Disabled', 'NotSpecified'
 * @readonly
 * @enum {string}
 */
export type RemoteLoginPortPublicAccess = 'Enabled' | 'Disabled' | 'NotSpecified';

/**
 * Defines values for AllocationState.
 * Possible values include: 'Steady', 'Resizing'
 * @readonly
 * @enum {string}
 */
export type AllocationState = 'Steady' | 'Resizing';

/**
 * Defines values for ApplicationSharingPolicy.
 * Possible values include: 'Personal', 'Shared'
 * @readonly
 * @enum {string}
 */
export type ApplicationSharingPolicy = 'Personal' | 'Shared';

/**
 * Defines values for SshPublicAccess.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type SshPublicAccess = 'Enabled' | 'Disabled';

/**
 * Defines values for ComputeInstanceState.
 * Possible values include: 'Creating', 'CreateFailed', 'Deleting', 'Running', 'Restarting',
 * 'JobRunning', 'SettingUp', 'SetupFailed', 'Starting', 'Stopped', 'Stopping', 'UserSettingUp',
 * 'UserSetupFailed', 'Unknown', 'Unusable'
 * @readonly
 * @enum {string}
 */
export type ComputeInstanceState = 'Creating' | 'CreateFailed' | 'Deleting' | 'Running' | 'Restarting' | 'JobRunning' | 'SettingUp' | 'SetupFailed' | 'Starting' | 'Stopped' | 'Stopping' | 'UserSettingUp' | 'UserSetupFailed' | 'Unknown' | 'Unusable';

/**
 * Defines values for ComputeInstanceAuthorizationType.
 * Possible values include: 'personal'
 * @readonly
 * @enum {string}
 */
export type ComputeInstanceAuthorizationType = 'personal';

/**
 * Defines values for OperationName.
 * Possible values include: 'Create', 'Start', 'Stop', 'Restart', 'Reimage', 'Delete'
 * @readonly
 * @enum {string}
 */
export type OperationName = 'Create' | 'Start' | 'Stop' | 'Restart' | 'Reimage' | 'Delete';

/**
 * Defines values for OperationStatus.
 * Possible values include: 'InProgress', 'Succeeded', 'CreateFailed', 'StartFailed', 'StopFailed',
 * 'RestartFailed', 'ReimageFailed', 'DeleteFailed'
 * @readonly
 * @enum {string}
 */
export type OperationStatus = 'InProgress' | 'Succeeded' | 'CreateFailed' | 'StartFailed' | 'StopFailed' | 'RestartFailed' | 'ReimageFailed' | 'DeleteFailed';

/**
 * Defines values for NodeState.
 * Possible values include: 'idle', 'running', 'preparing', 'unusable', 'leaving', 'preempted'
 * @readonly
 * @enum {string}
 */
export type NodeState = 'idle' | 'running' | 'preparing' | 'unusable' | 'leaving' | 'preempted';

/**
 * Defines values for ComputeType.
 * Possible values include: 'AKS', 'AmlCompute', 'ComputeInstance', 'DataFactory',
 * 'VirtualMachine', 'HDInsight', 'Databricks', 'DataLakeAnalytics'
 * @readonly
 * @enum {string}
 */
export type ComputeType = 'AKS' | 'AmlCompute' | 'ComputeInstance' | 'DataFactory' | 'VirtualMachine' | 'HDInsight' | 'Databricks' | 'DataLakeAnalytics';

/**
 * Defines values for ReasonCode.
 * Possible values include: 'NotSpecified', 'NotAvailableForRegion', 'NotAvailableForSubscription'
 * @readonly
 * @enum {string}
 */
export type ReasonCode = 'NotSpecified' | 'NotAvailableForRegion' | 'NotAvailableForSubscription';

/**
 * Defines values for WebServiceState.
 * Possible values include: 'Transitioning', 'Healthy', 'Unhealthy', 'Failed', 'Unschedulable'
 * @readonly
 * @enum {string}
 */
export type WebServiceState = 'Transitioning' | 'Healthy' | 'Unhealthy' | 'Failed' | 'Unschedulable';

/**
 * Defines values for DeploymentType.
 * Possible values include: 'GRPCRealtimeEndpoint', 'HttpRealtimeEndpoint', 'Batch'
 * @readonly
 * @enum {string}
 */
export type DeploymentType = 'GRPCRealtimeEndpoint' | 'HttpRealtimeEndpoint' | 'Batch';

/**
 * Defines values for VariantType.
 * Possible values include: 'Control', 'Treatment'
 * @readonly
 * @enum {string}
 */
export type VariantType = 'Control' | 'Treatment';

/**
 * Defines values for ValueFormat.
 * Possible values include: 'JSON'
 * @readonly
 * @enum {string}
 */
export type ValueFormat = 'JSON';

/**
 * Defines values for CredentialsType.
 * Possible values include: 'AccountKey', 'Certificate', 'None', 'Sas', 'ServicePrincipal',
 * 'SqlAdmin'
 * @readonly
 * @enum {string}
 */
export type CredentialsType = 'AccountKey' | 'Certificate' | 'None' | 'Sas' | 'ServicePrincipal' | 'SqlAdmin';

/**
 * Defines values for ContentsType.
 * Possible values include: 'AzureBlob', 'AzureDataLake', 'AzureDataLakeGen2', 'AzureFile',
 * 'AzureMySql', 'AzurePostgreSql', 'AzureSqlDatabase', 'GlusterFs'
 * @readonly
 * @enum {string}
 */
export type ContentsType = 'AzureBlob' | 'AzureDataLake' | 'AzureDataLakeGen2' | 'AzureFile' | 'AzureMySql' | 'AzurePostgreSql' | 'AzureSqlDatabase' | 'GlusterFs';

/**
 * Defines values for OriginType.
 * Possible values include: 'Synapse'
 * @readonly
 * @enum {string}
 */
export type OriginType = 'Synapse';

/**
 * Defines values for DatasetType.
 * Possible values include: 'Simple', 'Dataflow'
 * @readonly
 * @enum {string}
 */
export type DatasetType = 'Simple' | 'Dataflow';

/**
 * Defines values for EnvironmentSpecificationType.
 * Possible values include: 'Curated', 'UserCreated'
 * @readonly
 * @enum {string}
 */
export type EnvironmentSpecificationType = 'Curated' | 'UserCreated';

/**
 * Defines values for DataBindingMode.
 * Possible values include: 'Mount', 'Download', 'Upload'
 * @readonly
 * @enum {string}
 */
export type DataBindingMode = 'Mount' | 'Download' | 'Upload';

/**
 * Defines values for JobProvisioningState.
 * Possible values include: 'Succeeded', 'Failed', 'Canceled'
 * @readonly
 * @enum {string}
 */
export type JobProvisioningState = 'Succeeded' | 'Failed' | 'Canceled';

/**
 * Defines values for JobStatus.
 * Possible values include: 'NotStarted', 'Starting', 'Provisioning', 'Preparing', 'Queued',
 * 'Running', 'Finalizing', 'CancelRequested', 'Completed', 'Failed', 'Canceled', 'NotResponding',
 * 'Paused'
 * @readonly
 * @enum {string}
 */
export type JobStatus = 'NotStarted' | 'Starting' | 'Provisioning' | 'Preparing' | 'Queued' | 'Running' | 'Finalizing' | 'CancelRequested' | 'Completed' | 'Failed' | 'Canceled' | 'NotResponding' | 'Paused';

/**
 * Defines values for ParameterSamplingType.
 * Possible values include: 'Grid', 'Random', 'Bayesian'
 * @readonly
 * @enum {string}
 */
export type ParameterSamplingType = 'Grid' | 'Random' | 'Bayesian';

/**
 * Defines values for PrimaryMetricGoal.
 * Possible values include: 'Minimize', 'Maximize'
 * @readonly
 * @enum {string}
 */
export type PrimaryMetricGoal = 'Minimize' | 'Maximize';

/**
 * Defines values for CreatedByType.
 * Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'
 * @readonly
 * @enum {string}
 */
export type CreatedByType = 'User' | 'Application' | 'ManagedIdentity' | 'Key';

/**
 * Defines values for UnderlyingResourceAction.
 * Possible values include: 'Delete', 'Detach'
 * @readonly
 * @enum {string}
 */
export type UnderlyingResourceAction = 'Delete' | 'Detach';

/**
 * Defines values for OrderString.
 * Possible values include: 'CreatedAtDesc', 'CreatedAtAsc', 'UpdatedAtDesc', 'UpdatedAtAsc'
 * @readonly
 * @enum {string}
 */
export type OrderString = 'CreatedAtDesc' | 'CreatedAtAsc' | 'UpdatedAtDesc' | 'UpdatedAtAsc';

/**
 * Defines values for Status1.
 * Possible values include: 'Disabled', 'Enabled', 'Auto'
 * @readonly
 * @enum {string}
 */
export type Status1 = 'Disabled' | 'Enabled' | 'Auto';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WorkspacesGetResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workspace;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type WorkspacesCreateOrUpdateResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workspace;
    };
};

/**
 * Contains response data for the update operation.
 */
export type WorkspacesUpdateResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workspace;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type WorkspacesListByResourceGroupResponse = WorkspaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceListResult;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type WorkspacesListKeysResponse = ListWorkspaceKeysResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListWorkspaceKeysResult;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type WorkspacesListBySubscriptionResponse = WorkspaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceListResult;
    };
};

/**
 * Contains response data for the listNotebookAccessToken operation.
 */
export type WorkspacesListNotebookAccessTokenResponse = NotebookAccessTokenResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NotebookAccessTokenResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type WorkspacesBeginCreateOrUpdateResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workspace;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type WorkspacesListByResourceGroupNextResponse = WorkspaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceListResult;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type WorkspacesListBySubscriptionNextResponse = WorkspaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type WorkspaceFeaturesListResponse = ListAmlUserFeatureResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListAmlUserFeatureResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type WorkspaceFeaturesListNextResponse = ListAmlUserFeatureResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListAmlUserFeatureResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type UsagesListResponse = ListUsagesResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListUsagesResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type UsagesListNextResponse = ListUsagesResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListUsagesResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type VirtualMachineSizesListResponse = VirtualMachineSizeListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineSizeListResult;
    };
};

/**
 * Contains response data for the update operation.
 */
export type QuotasUpdateResponse = UpdateWorkspaceQuotasResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UpdateWorkspaceQuotasResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type QuotasListResponse = ListWorkspaceQuotas & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListWorkspaceQuotas;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type QuotasListNextResponse = ListWorkspaceQuotas & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListWorkspaceQuotas;
    };
};

/**
 * Contains response data for the listByWorkspace operation.
 */
export type MachineLearningComputeListByWorkspaceResponse = PaginatedComputeResourcesList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PaginatedComputeResourcesList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type MachineLearningComputeGetResponse = ComputeResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ComputeResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type MachineLearningComputeCreateOrUpdateResponse = ComputeResource & MachineLearningComputeCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: MachineLearningComputeCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ComputeResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type MachineLearningComputeUpdateResponse = ComputeResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ComputeResource;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type MachineLearningComputeDeleteResponse = MachineLearningComputeDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: MachineLearningComputeDeleteHeaders;
    };
};

/**
 * Contains response data for the listNodes operation.
 */
export type MachineLearningComputeListNodesResponse = AmlComputeNodesInformation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AmlComputeNodesInformation;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type MachineLearningComputeListKeysResponse = ComputeSecretsUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ComputeSecretsUnion;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type MachineLearningComputeBeginUpdateResponse = ComputeResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ComputeResource;
    };
};

/**
 * Contains response data for the listByWorkspaceNext operation.
 */
export type MachineLearningComputeListByWorkspaceNextResponse = PaginatedComputeResourcesList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PaginatedComputeResourcesList;
    };
};

/**
 * Contains response data for the listNodesNext operation.
 */
export type MachineLearningComputeListNodesNextResponse = AmlComputeNodesInformation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AmlComputeNodesInformation;
    };
};

/**
 * Contains response data for the listSkus operation.
 */
export type ListSkusResponse = SkuListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SkuListResult;
    };
};

/**
 * Contains response data for the listSkusNext operation.
 */
export type ListSkusNextResponse = SkuListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SkuListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the put operation.
 */
export type PrivateEndpointConnectionsPutResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the listByWorkspace operation.
 */
export type PrivateLinkResourcesListByWorkspaceResponse = PrivateLinkResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResourceListResult;
    };
};

/**
 * Contains response data for the listByWorkspace operation.
 */
export type MachineLearningServiceListByWorkspaceResponse = PaginatedServiceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PaginatedServiceList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type MachineLearningServiceGetResponse = ServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServiceResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type MachineLearningServiceCreateOrUpdateResponse = ServiceResource & MachineLearningServiceCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: MachineLearningServiceCreateOrUpdateHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServiceResource;
    };
};

/**
 * Contains response data for the listByWorkspaceNext operation.
 */
export type MachineLearningServiceListByWorkspaceNextResponse = PaginatedServiceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PaginatedServiceList;
    };
};

/**
 * Contains response data for the prepare operation.
 */
export type NotebooksPrepareResponse = NotebookResourceInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NotebookResourceInfo;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type NotebooksListKeysResponse = ListNotebookKeysResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListNotebookKeysResult;
    };
};

/**
 * Contains response data for the beginPrepare operation.
 */
export type NotebooksBeginPrepareResponse = NotebookResourceInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NotebookResourceInfo;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type StorageAccountListKeysResponse = ListStorageAccountKeysResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListStorageAccountKeysResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type WorkspaceConnectionsListResponse = PaginatedWorkspaceConnectionsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PaginatedWorkspaceConnectionsList;
    };
};

/**
 * Contains response data for the create operation.
 */
export type WorkspaceConnectionsCreateResponse = WorkspaceConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceConnection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WorkspaceConnectionsGetResponse = WorkspaceConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceConnection;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type CodeContainersCreateOrUpdateResponse = CodeContainerResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CodeContainerResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type CodeContainersGetResponse = CodeContainerResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CodeContainerResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type CodeContainersListResponse = CodeContainerResourceArmPaginatedResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CodeContainerResourceArmPaginatedResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type CodeContainersListNextResponse = CodeContainerResourceArmPaginatedResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CodeContainerResourceArmPaginatedResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type CodeVersionsCreateOrUpdateResponse = CodeVersionResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CodeVersionResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type CodeVersionsGetResponse = CodeVersionResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CodeVersionResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type CodeVersionsListResponse = CodeVersionResourceArmPaginatedResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CodeVersionResourceArmPaginatedResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type CodeVersionsListNextResponse = CodeVersionResourceArmPaginatedResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CodeVersionResourceArmPaginatedResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DataContainersCreateOrUpdateResponse = DataContainerResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataContainerResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DataContainersGetResponse = DataContainerResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataContainerResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DataContainersListResponse = DataContainerResourceArmPaginatedResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataContainerResourceArmPaginatedResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type DataContainersListNextResponse = DataContainerResourceArmPaginatedResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataContainerResourceArmPaginatedResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DatastoresListResponse = DatastorePropertiesResourceArmPaginatedResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatastorePropertiesResourceArmPaginatedResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatastoresGetResponse = DatastorePropertiesResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatastorePropertiesResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DatastoresCreateOrUpdateResponse = DatastorePropertiesResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatastorePropertiesResource;
    };
};

/**
 * Contains response data for the listSecrets operation.
 */
export type DatastoresListSecretsResponse = DatastoreCredentials & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatastoreCredentials;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type DatastoresListNextResponse = DatastorePropertiesResourceArmPaginatedResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatastorePropertiesResourceArmPaginatedResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DataVersionsCreateOrUpdateResponse = DataVersionResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataVersionResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DataVersionsGetResponse = DataVersionResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataVersionResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DataVersionsListResponse = DataVersionResourceArmPaginatedResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataVersionResourceArmPaginatedResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type DataVersionsListNextResponse = DataVersionResourceArmPaginatedResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataVersionResourceArmPaginatedResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type EnvironmentContainersCreateOrUpdateResponse = EnvironmentContainerResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnvironmentContainerResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type EnvironmentContainersGetResponse = EnvironmentContainerResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnvironmentContainerResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type EnvironmentContainersListResponse = EnvironmentContainerResourceArmPaginatedResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnvironmentContainerResourceArmPaginatedResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type EnvironmentContainersListNextResponse = EnvironmentContainerResourceArmPaginatedResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnvironmentContainerResourceArmPaginatedResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type EnvironmentSpecificationVersionsCreateOrUpdateResponse = EnvironmentSpecificationVersionResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnvironmentSpecificationVersionResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type EnvironmentSpecificationVersionsGetResponse = EnvironmentSpecificationVersionResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnvironmentSpecificationVersionResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type EnvironmentSpecificationVersionsListResponse = EnvironmentSpecificationVersionResourceArmPaginatedResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnvironmentSpecificationVersionResourceArmPaginatedResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type EnvironmentSpecificationVersionsListNextResponse = EnvironmentSpecificationVersionResourceArmPaginatedResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnvironmentSpecificationVersionResourceArmPaginatedResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type JobsCreateOrUpdateResponse = JobBaseResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobBaseResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobsGetResponse = JobBaseResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobBaseResource;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type JobsDeleteResponse = JobsDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: JobsDeleteHeaders;
    };
};

/**
 * Contains response data for the list operation.
 */
export type JobsListResponse = JobBaseResourceArmPaginatedResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobBaseResourceArmPaginatedResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type JobsListNextResponse = JobBaseResourceArmPaginatedResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobBaseResourceArmPaginatedResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ModelContainersListResponse = ModelContainerResourceArmPaginatedResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ModelContainerResourceArmPaginatedResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ModelContainersCreateOrUpdateResponse = ModelContainerResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ModelContainerResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ModelContainersGetResponse = ModelContainerResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ModelContainerResource;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ModelContainersListNextResponse = ModelContainerResourceArmPaginatedResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ModelContainerResourceArmPaginatedResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ModelVersionsListResponse = ModelVersionResourceArmPaginatedResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ModelVersionResourceArmPaginatedResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ModelVersionsCreateOrUpdateResponse = ModelVersionResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ModelVersionResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ModelVersionsGetResponse = ModelVersionResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ModelVersionResource;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ModelVersionsListNextResponse = ModelVersionResourceArmPaginatedResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ModelVersionResourceArmPaginatedResult;
    };
};
