/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const EventPropertiesArticle: msRest.CompositeMapper = {
  serializedName: "event_properties_article",
  type: {
    name: "Composite",
    className: "EventPropertiesArticle",
    modelProperties: {
      articleContent: {
        serializedName: "articleContent",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LinkDisplayText: msRest.CompositeMapper = {
  serializedName: "link_displayText",
  type: {
    name: "Composite",
    className: "LinkDisplayText",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      localizedValue: {
        serializedName: "localizedValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Link: msRest.CompositeMapper = {
  serializedName: "link",
  type: {
    name: "Composite",
    className: "Link",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      displayText: {
        serializedName: "displayText",
        type: {
          name: "Composite",
          className: "LinkDisplayText"
        }
      },
      extensionName: {
        serializedName: "extensionName",
        type: {
          name: "String"
        }
      },
      bladeName: {
        serializedName: "bladeName",
        type: {
          name: "String"
        }
      },
      parameters: {
        serializedName: "parameters",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const Update: msRest.CompositeMapper = {
  serializedName: "update",
  type: {
    name: "Composite",
    className: "Update",
    modelProperties: {
      summary: {
        serializedName: "summary",
        type: {
          name: "String"
        }
      },
      updateDateTime: {
        serializedName: "updateDateTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ImpactedServiceRegion: msRest.CompositeMapper = {
  serializedName: "impactedServiceRegion",
  type: {
    name: "Composite",
    className: "ImpactedServiceRegion",
    modelProperties: {
      impactedRegion: {
        serializedName: "impactedRegion",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      impactedSubscriptions: {
        serializedName: "impactedSubscriptions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      lastUpdateTime: {
        serializedName: "lastUpdateTime",
        type: {
          name: "DateTime"
        }
      },
      updates: {
        serializedName: "updates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Update"
            }
          }
        }
      }
    }
  }
};

export const Impact: msRest.CompositeMapper = {
  serializedName: "impact",
  type: {
    name: "Composite",
    className: "Impact",
    modelProperties: {
      impactedService: {
        serializedName: "impactedService",
        type: {
          name: "String"
        }
      },
      impactedRegions: {
        serializedName: "impactedRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ImpactedServiceRegion"
            }
          }
        }
      }
    }
  }
};

export const EventPropertiesRecommendedActionsActionsItem: msRest.CompositeMapper = {
  serializedName: "event_properties_recommendedActions_actionsItem",
  type: {
    name: "Composite",
    className: "EventPropertiesRecommendedActionsActionsItem",
    modelProperties: {
      groupId: {
        serializedName: "groupId",
        type: {
          name: "Number"
        }
      },
      actionText: {
        serializedName: "actionText",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventPropertiesRecommendedActions: msRest.CompositeMapper = {
  serializedName: "event_properties_recommendedActions",
  type: {
    name: "Composite",
    className: "EventPropertiesRecommendedActions",
    modelProperties: {
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      actions: {
        serializedName: "actions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EventPropertiesRecommendedActionsActionsItem"
            }
          }
        }
      },
      localeCode: {
        serializedName: "localeCode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Faq: msRest.CompositeMapper = {
  serializedName: "faq",
  type: {
    name: "Composite",
    className: "Faq",
    modelProperties: {
      question: {
        serializedName: "question",
        type: {
          name: "String"
        }
      },
      answer: {
        serializedName: "answer",
        type: {
          name: "String"
        }
      },
      localeCode: {
        serializedName: "localeCode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Event: msRest.CompositeMapper = {
  serializedName: "event",
  type: {
    name: "Composite",
    className: "Event",
    modelProperties: {
      ...Resource.type.modelProperties,
      eventType: {
        serializedName: "properties.eventType",
        type: {
          name: "String"
        }
      },
      eventSource: {
        serializedName: "properties.eventSource",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      title: {
        serializedName: "properties.title",
        type: {
          name: "String"
        }
      },
      summary: {
        serializedName: "properties.summary",
        type: {
          name: "String"
        }
      },
      header: {
        serializedName: "properties.header",
        type: {
          name: "String"
        }
      },
      level: {
        serializedName: "properties.level",
        type: {
          name: "String"
        }
      },
      eventLevel: {
        serializedName: "properties.eventLevel",
        type: {
          name: "String"
        }
      },
      article: {
        serializedName: "properties.article",
        type: {
          name: "Composite",
          className: "EventPropertiesArticle"
        }
      },
      links: {
        serializedName: "properties.links",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Link"
            }
          }
        }
      },
      impactStartTime: {
        serializedName: "properties.impactStartTime",
        type: {
          name: "DateTime"
        }
      },
      impactMitigationTime: {
        serializedName: "properties.impactMitigationTime",
        type: {
          name: "DateTime"
        }
      },
      impact: {
        serializedName: "properties.impact",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Impact"
            }
          }
        }
      },
      recommendedActions: {
        serializedName: "properties.recommendedActions",
        type: {
          name: "Composite",
          className: "EventPropertiesRecommendedActions"
        }
      },
      faqs: {
        serializedName: "properties.faqs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Faq"
            }
          }
        }
      },
      isHIR: {
        serializedName: "properties.isHIR",
        type: {
          name: "Boolean"
        }
      },
      enableMicrosoftSupport: {
        serializedName: "properties.enableMicrosoftSupport",
        type: {
          name: "Boolean"
        }
      },
      enableChatWithUs: {
        serializedName: "properties.enableChatWithUs",
        type: {
          name: "Boolean"
        }
      },
      priority: {
        serializedName: "properties.priority",
        type: {
          name: "Number"
        }
      },
      lastUpdateTime: {
        serializedName: "properties.lastUpdateTime",
        type: {
          name: "DateTime"
        }
      },
      hirStage: {
        serializedName: "properties.hirStage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AvailabilityStatusPropertiesRecentlyResolved: msRest.CompositeMapper = {
  serializedName: "availabilityStatus_properties_recentlyResolved",
  type: {
    name: "Composite",
    className: "AvailabilityStatusPropertiesRecentlyResolved",
    modelProperties: {
      unavailableOccurredTime: {
        serializedName: "unavailableOccurredTime",
        type: {
          name: "DateTime"
        }
      },
      resolvedTime: {
        serializedName: "resolvedTime",
        type: {
          name: "DateTime"
        }
      },
      unavailabilitySummary: {
        serializedName: "unavailabilitySummary",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RecommendedAction: msRest.CompositeMapper = {
  serializedName: "recommendedAction",
  type: {
    name: "Composite",
    className: "RecommendedAction",
    modelProperties: {
      action: {
        serializedName: "action",
        type: {
          name: "String"
        }
      },
      actionUrl: {
        serializedName: "actionUrl",
        type: {
          name: "String"
        }
      },
      actionUrlText: {
        serializedName: "actionUrlText",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceImpactingEventStatus: msRest.CompositeMapper = {
  serializedName: "serviceImpactingEvent_status",
  type: {
    name: "Composite",
    className: "ServiceImpactingEventStatus",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceImpactingEventIncidentProperties: msRest.CompositeMapper = {
  serializedName: "serviceImpactingEvent_incidentProperties",
  type: {
    name: "Composite",
    className: "ServiceImpactingEventIncidentProperties",
    modelProperties: {
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      service: {
        serializedName: "service",
        type: {
          name: "String"
        }
      },
      region: {
        serializedName: "region",
        type: {
          name: "String"
        }
      },
      incidentType: {
        serializedName: "incidentType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceImpactingEvent: msRest.CompositeMapper = {
  serializedName: "serviceImpactingEvent",
  type: {
    name: "Composite",
    className: "ServiceImpactingEvent",
    modelProperties: {
      eventStartTime: {
        serializedName: "eventStartTime",
        type: {
          name: "DateTime"
        }
      },
      eventStatusLastModifiedTime: {
        serializedName: "eventStatusLastModifiedTime",
        type: {
          name: "DateTime"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "ServiceImpactingEventStatus"
        }
      },
      incidentProperties: {
        serializedName: "incidentProperties",
        type: {
          name: "Composite",
          className: "ServiceImpactingEventIncidentProperties"
        }
      }
    }
  }
};

export const AvailabilityStatusProperties: msRest.CompositeMapper = {
  serializedName: "availabilityStatus_properties",
  type: {
    name: "Composite",
    className: "AvailabilityStatusProperties",
    modelProperties: {
      availabilityState: {
        serializedName: "availabilityState",
        type: {
          name: "String"
        }
      },
      summary: {
        serializedName: "summary",
        type: {
          name: "String"
        }
      },
      detailedStatus: {
        serializedName: "detailedStatus",
        type: {
          name: "String"
        }
      },
      reasonType: {
        serializedName: "reasonType",
        type: {
          name: "String"
        }
      },
      rootCauseAttributionTime: {
        serializedName: "rootCauseAttributionTime",
        type: {
          name: "DateTime"
        }
      },
      healthEventType: {
        serializedName: "healthEventType",
        type: {
          name: "String"
        }
      },
      healthEventCause: {
        serializedName: "healthEventCause",
        type: {
          name: "String"
        }
      },
      healthEventCategory: {
        serializedName: "healthEventCategory",
        type: {
          name: "String"
        }
      },
      healthEventId: {
        serializedName: "healthEventId",
        type: {
          name: "String"
        }
      },
      resolutionETA: {
        serializedName: "resolutionETA",
        type: {
          name: "DateTime"
        }
      },
      occurredTime: {
        serializedName: "occurredTime",
        type: {
          name: "DateTime"
        }
      },
      reasonChronicity: {
        serializedName: "reasonChronicity",
        type: {
          name: "String"
        }
      },
      reportedTime: {
        serializedName: "reportedTime",
        type: {
          name: "DateTime"
        }
      },
      recentlyResolved: {
        serializedName: "recentlyResolved",
        type: {
          name: "Composite",
          className: "AvailabilityStatusPropertiesRecentlyResolved"
        }
      },
      recommendedActions: {
        serializedName: "recommendedActions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RecommendedAction"
            }
          }
        }
      },
      serviceImpactingEvents: {
        serializedName: "serviceImpactingEvents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceImpactingEvent"
            }
          }
        }
      }
    }
  }
};

export const AvailabilityStatus: msRest.CompositeMapper = {
  serializedName: "availabilityStatus",
  type: {
    name: "Composite",
    className: "AvailabilityStatus",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AvailabilityStatusProperties"
        }
      }
    }
  }
};

export const StatusBanner: msRest.CompositeMapper = {
  serializedName: "statusBanner",
  type: {
    name: "Composite",
    className: "StatusBanner",
    modelProperties: {
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      cloud: {
        serializedName: "cloud",
        type: {
          name: "String"
        }
      },
      lastModifiedTime: {
        serializedName: "lastModifiedTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ImpactedRegion: msRest.CompositeMapper = {
  serializedName: "impactedRegion",
  type: {
    name: "Composite",
    className: "ImpactedRegion",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EmergingIssueImpact: msRest.CompositeMapper = {
  serializedName: "emergingIssueImpact",
  type: {
    name: "Composite",
    className: "EmergingIssueImpact",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      regions: {
        serializedName: "regions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ImpactedRegion"
            }
          }
        }
      }
    }
  }
};

export const StatusActiveEvent: msRest.CompositeMapper = {
  serializedName: "statusActiveEvent",
  type: {
    name: "Composite",
    className: "StatusActiveEvent",
    modelProperties: {
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      trackingId: {
        serializedName: "trackingId",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      cloud: {
        serializedName: "cloud",
        type: {
          name: "String"
        }
      },
      severity: {
        serializedName: "severity",
        type: {
          name: "String"
        }
      },
      stage: {
        serializedName: "stage",
        type: {
          name: "String"
        }
      },
      published: {
        serializedName: "published",
        type: {
          name: "Boolean"
        }
      },
      lastModifiedTime: {
        serializedName: "lastModifiedTime",
        type: {
          name: "DateTime"
        }
      },
      impacts: {
        serializedName: "impacts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EmergingIssueImpact"
            }
          }
        }
      }
    }
  }
};

export const EmergingIssuesGetResult: msRest.CompositeMapper = {
  serializedName: "emergingIssuesGetResult",
  type: {
    name: "Composite",
    className: "EmergingIssuesGetResult",
    modelProperties: {
      ...Resource.type.modelProperties,
      refreshTimestamp: {
        serializedName: "properties.refreshTimestamp",
        type: {
          name: "DateTime"
        }
      },
      statusBanners: {
        serializedName: "properties.statusBanners",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StatusBanner"
            }
          }
        }
      },
      statusActiveEvents: {
        serializedName: "properties.statusActiveEvents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StatusActiveEvent"
            }
          }
        }
      }
    }
  }
};

export const IcmIncidents: msRest.CompositeMapper = {
  serializedName: "icmIncidents",
  type: {
    name: "Composite",
    className: "IcmIncidents",
    modelProperties: {
      icmId: {
        readOnly: true,
        serializedName: "icmId",
        type: {
          name: "String"
        }
      },
      severity: {
        readOnly: true,
        serializedName: "severity",
        type: {
          name: "Number"
        }
      },
      state: {
        readOnly: true,
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      icmLink: {
        readOnly: true,
        serializedName: "icmLink",
        type: {
          name: "String"
        }
      },
      title: {
        readOnly: true,
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      impactStartTime: {
        readOnly: true,
        serializedName: "impactStartTime",
        type: {
          name: "DateTime"
        }
      },
      impactMitigateTime: {
        readOnly: true,
        serializedName: "impactMitigateTime",
        type: {
          name: "DateTime"
        }
      },
      impactedDataCenters: {
        readOnly: true,
        serializedName: "impactedDataCenters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      impactedServices: {
        readOnly: true,
        serializedName: "impactedServices",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      impactedResourceTypes: {
        readOnly: true,
        serializedName: "impactedResourceTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PotentialOutagesGetResult: msRest.CompositeMapper = {
  serializedName: "potentialOutagesGetResult",
  type: {
    name: "Composite",
    className: "PotentialOutagesGetResult",
    modelProperties: {
      ...Resource.type.modelProperties,
      outageId: {
        readOnly: true,
        serializedName: "properties.outageId",
        type: {
          name: "String"
        }
      },
      title: {
        readOnly: true,
        serializedName: "properties.title",
        type: {
          name: "String"
        }
      },
      confidenceScore: {
        readOnly: true,
        serializedName: "properties.confidenceScore",
        type: {
          name: "Number"
        }
      },
      confidence: {
        readOnly: true,
        serializedName: "properties.confidence",
        type: {
          name: "String"
        }
      },
      impactedRegions: {
        readOnly: true,
        serializedName: "properties.impactedRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      detectedDateTime: {
        readOnly: true,
        serializedName: "properties.detectedDateTime",
        type: {
          name: "DateTime"
        }
      },
      impactedDataCenters: {
        readOnly: true,
        serializedName: "properties.impactedDataCenters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      impactedServices: {
        readOnly: true,
        serializedName: "properties.impactedServices",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      impactedResourceTypes: {
        readOnly: true,
        serializedName: "properties.impactedResourceTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      symptoms: {
        readOnly: true,
        serializedName: "properties.symptoms",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      incidents: {
        serializedName: "properties.incidents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "IcmIncidents"
            }
          }
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "operationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WrappedErrorResponse: msRest.CompositeMapper = {
  serializedName: "WrappedErrorResponse",
  type: {
    name: "Composite",
    className: "WrappedErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorResponse"
        }
      }
    }
  }
};

export const MetadataSupportedValueDetail: msRest.CompositeMapper = {
  serializedName: "MetadataSupportedValueDetail",
  type: {
    name: "Composite",
    className: "MetadataSupportedValueDetail",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetadataEntity: msRest.CompositeMapper = {
  serializedName: "MetadataEntity",
  type: {
    name: "Composite",
    className: "MetadataEntity",
    modelProperties: {
      ...Resource.type.modelProperties,
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      dependsOn: {
        serializedName: "properties.dependsOn",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      applicableScenarios: {
        serializedName: "properties.applicableScenarios",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      supportedValues: {
        serializedName: "properties.supportedValues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetadataSupportedValueDetail"
            }
          }
        }
      }
    }
  }
};

export const MetadataEntityListResult: msRest.CompositeMapper = {
  serializedName: "MetadataEntityListResult",
  type: {
    name: "Composite",
    className: "MetadataEntityListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetadataEntity"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureEntityResource: msRest.CompositeMapper = {
  serializedName: "AzureEntityResource",
  type: {
    name: "Composite",
    className: "AzureEntityResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Events: msRest.CompositeMapper = {
  serializedName: "events",
  type: {
    name: "Composite",
    className: "Events",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Event"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AvailabilityStatusListResult: msRest.CompositeMapper = {
  serializedName: "availabilityStatusListResult",
  type: {
    name: "Composite",
    className: "AvailabilityStatusListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvailabilityStatus"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EmergingIssueListResult: msRest.CompositeMapper = {
  serializedName: "emergingIssueListResult",
  type: {
    name: "Composite",
    className: "EmergingIssueListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EmergingIssuesGetResult"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PotentialOutageListResult: msRest.CompositeMapper = {
  serializedName: "potentialOutageListResult",
  type: {
    name: "Composite",
    className: "PotentialOutageListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PotentialOutagesGetResult"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
