/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Location information.
 */
export interface Location {
  /**
   * The fully qualified ID of the location. For example,
   * /subscriptions/00000000-0000-0000-0000-000000000000/locations/westus.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The subscription ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscriptionId?: string;
  /**
   * The location name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The display name of the location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * The latitude of the location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly latitude?: string;
  /**
   * The longitude of the location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly longitude?: string;
}

/**
 * Subscription policies.
 */
export interface SubscriptionPolicies {
  /**
   * The subscription location placement ID. The ID indicates which regions are visible for a
   * subscription. For example, a subscription with a location placement Id of Public_2014-09-01
   * has access to Azure public regions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly locationPlacementId?: string;
  /**
   * The subscription quota ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly quotaId?: string;
  /**
   * The subscription spending limit. Possible values include: 'On', 'Off', 'CurrentPeriodOff'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly spendingLimit?: SpendingLimit;
}

/**
 * Subscription information.
 */
export interface Subscription {
  /**
   * The fully qualified ID for the subscription. For example,
   * /subscriptions/00000000-0000-0000-0000-000000000000.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The subscription ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscriptionId?: string;
  /**
   * The subscription display name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.
   * Possible values include: 'Enabled', 'Warned', 'PastDue', 'Disabled', 'Deleted'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: SubscriptionState;
  /**
   * The subscription policies.
   */
  subscriptionPolicies?: SubscriptionPolicies;
  /**
   * The authorization source of the request. Valid values are one or more combinations of Legacy,
   * RoleBased, Bypassed, Direct and Management. For example, 'Legacy, RoleBased'.
   */
  authorizationSource?: string;
}

/**
 * Tenant Id information.
 */
export interface TenantIdDescription {
  /**
   * The fully qualified ID of the tenant. For example,
   * /tenants/00000000-0000-0000-0000-000000000000.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The tenant ID. For example, 00000000-0000-0000-0000-000000000000.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
}

/**
 * Describes the format of Error response.
 */
export interface ErrorResponse {
  /**
   * Error code
   */
  code?: string;
  /**
   * Error message indicating why the operation failed.
   */
  message?: string;
}

/**
 * Error response indicates that the service is not able to process the incoming request. The
 * reason is provided in the error message.
 */
export interface ErrorResponseBody {
  /**
   * The details of the error.
   */
  error?: ErrorResponse;
}

/**
 * The ID of the canceled subscription
 */
export interface CanceledSubscriptionId {
  /**
   * The ID of the canceled subscription
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: string;
}

/**
 * The ID of the subscriptions that is being renamed
 */
export interface RenamedSubscriptionId {
  /**
   * The ID of the subscriptions that is being renamed
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: string;
}

/**
 * The ID of the subscriptions that is being enabled
 */
export interface EnabledSubscriptionId {
  /**
   * The ID of the subscriptions that is being enabled
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: string;
}

/**
 * The new name of the subscription.
 */
export interface SubscriptionName {
  /**
   * New subscription name
   */
  subscriptionName?: string;
}

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft.Subscription
   */
  provider?: string;
  /**
   * Resource on which the operation is performed: Profile, endpoint, etc.
   */
  resource?: string;
  /**
   * Operation type: Read, write, delete, etc.
   */
  operation?: string;
}

/**
 * REST API operation
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * Indicates whether the operation is a data action
   */
  isDataAction?: boolean;
  /**
   * The object that represents the operation.
   */
  display?: OperationDisplay;
}

/**
 * Active Directory Principal whoâ€™ll get owner access on the new subscription.
 */
export interface AdPrincipal {
  /**
   * Object id of the Principal
   */
  objectId: string;
}

/**
 * The created subscription object.
 */
export interface SubscriptionCreationResult {
  /**
   * The link to the new subscription. Use this link to check the status of subscription creation
   * operation.
   */
  subscriptionLink?: string;
}

/**
 * Subscription Creation Parameters required to create a new Azure subscription.
 */
export interface SubscriptionCreationParameters {
  /**
   * The display name of the subscription.
   */
  displayName?: string;
  /**
   * The Management Group Id.
   */
  managementGroupId?: string;
  /**
   * The list of principals that should be granted Owner access on the subscription. Principals
   * should be of type User, Service Principal or Security Group.
   */
  owners?: AdPrincipal[];
  /**
   * The offer type of the subscription. For example, MS-AZR-0017P (EnterpriseAgreement) and
   * MS-AZR-0148P (EnterpriseAgreement devTest) are available. Only valid when creating a
   * subscription in a enrollment account scope. Possible values include: 'MS-AZR-0017P',
   * 'MS-AZR-0148P'
   */
  offerType?: OfferType;
  /**
   * Additional, untyped parameters to support custom subscription creation scenarios.
   */
  additionalParameters?: { [propertyName: string]: any };
}

/**
 * The parameters required to create a new subscription.
 */
export interface ModernSubscriptionCreationParameters {
  /**
   * The friendly name of the subscription.
   */
  displayName: string;
  /**
   * The SKU ID of the Azure plan. Azure plan determines the pricing and service-level agreement of
   * the subscription.  Use 001 for Microsoft Azure Plan and 002 for Microsoft Azure Plan for
   * DevTest.
   */
  skuId: string;
  /**
   * If set, the cost center will show up on the Azure usage and charges file.
   */
  costCenter?: string;
  /**
   * If specified, the AD principal will get owner access to the subscription, along with the user
   * who is performing the create subscription operation
   */
  owner?: AdPrincipal;
  /**
   * The identifier of the management group to which this subscription will be associated.
   */
  managementGroupId?: string;
  /**
   * Additional, untyped parameters to support custom subscription creation scenarios.
   */
  additionalParameters?: { [propertyName: string]: any };
}

/**
 * The parameters required to create a new CSP subscription.
 */
export interface ModernCspSubscriptionCreationParameters {
  /**
   * The friendly name of the subscription.
   */
  displayName: string;
  /**
   * The SKU ID of the Azure plan. Azure plan determines the pricing and service-level agreement of
   * the subscription.  Use 001 for Microsoft Azure Plan and 002 for Microsoft Azure Plan for
   * DevTest.
   */
  skuId: string;
  /**
   * Reseller ID, basically MPN Id.
   */
  resellerId?: string;
}

/**
 * Put subscription additional properties.
 */
export interface PutAliasRequestAdditionalProperties {
  /**
   * Management group Id for the subscription.
   */
  managementGroupId?: string;
  /**
   * Tenant Id of the subscription
   */
  subscriptionTenantId?: string;
  /**
   * Owner Id of the subscription
   */
  subscriptionOwnerId?: string;
  /**
   * tags for the subscription
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Put subscription properties.
 */
export interface PutAliasRequestProperties {
  /**
   * The friendly name of the subscription.
   */
  displayName: string;
  /**
   * The workload type of the subscription. It can be either Production or DevTest. Possible values
   * include: 'Production', 'DevTest'
   */
  workload: Workload;
  /**
   * Determines whether subscription is fieldLed, partnerLed or LegacyEA
   */
  billingScope: string;
  /**
   * This parameter can be used to create alias for existing subscription Id
   */
  subscriptionId?: string;
  /**
   * Reseller Id
   */
  resellerId?: string;
  /**
   * Put alias request additional properties.
   */
  additionalProperties?: PutAliasRequestAdditionalProperties;
}

/**
 * The parameters required to create a new subscription.
 */
export interface PutAliasRequest {
  /**
   * Put alias request properties.
   */
  properties?: PutAliasRequestProperties;
}

/**
 * Put subscription creation result properties.
 */
export interface SubscriptionAliasResponseProperties {
  /**
   * Newly created subscription Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscriptionId?: string;
  /**
   * The provisioning state of the resource. Possible values include: 'Accepted', 'Succeeded',
   * 'Failed'
   */
  provisioningState?: ProvisioningState;
  /**
   * Redeem url.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly redeemUrl?: string;
  /**
   * The redeem state of the resource. Possible values include: 'Pending', 'Completed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly redeemState?: RedeemState;
}

/**
 * Subscription Information with the alias.
 */
export interface SubscriptionAliasResponse extends BaseResource {
  /**
   * Fully qualified ID for the alias resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Alias ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type, Microsoft.Subscription/aliases.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Subscription Alias response properties.
   */
  properties?: SubscriptionAliasResponseProperties;
}

/**
 * The list of aliases.
 */
export interface SubscriptionAliasListResult {
  /**
   * The list of alias.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: SubscriptionAliasResponse[];
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Put tenant policy request properties.
 */
export interface PutTenantPolicyRequestProperties {
  /**
   * Blocks the leaving of subscriptions from user's tenant.
   */
  blockSubscriptionsLeavingTenant?: boolean;
  /**
   * Blocks the entering of subscriptions into user's tenant.
   */
  blockSubscriptionsIntoTenant?: boolean;
  /**
   * List of user objectIds that are exempted from the set subscription tenant policies for the
   * user's tenant.
   */
  exemptedPrincipals?: string[];
}

/**
 * Tenant policy.
 */
export interface TenantPolicy {
  /**
   * Policy Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly policyId?: string;
  /**
   * Blocks the leaving of subscriptions from user's tenant.
   */
  blockSubscriptionsLeavingTenant?: boolean;
  /**
   * Blocks the entering of subscriptions into user's tenant.
   */
  blockSubscriptionsIntoTenant?: boolean;
  /**
   * List of user objectIds that are exempted from the set subscription tenant policies for the
   * user's tenant.
   */
  exemptedPrincipals?: string[];
}

/**
 * Tenant policy Information.
 */
export interface GetTenantPolicyResponse extends BaseResource {
  /**
   * Policy Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Policy name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Tenant policy properties.
   */
  properties?: TenantPolicy;
}

/**
 * Billing account service tenant.
 */
export interface ServiceTenantResponse {
  /**
   * Service tenant id.
   */
  tenantId?: string;
  /**
   * Service tenant name.
   */
  tenantName?: string;
}

/**
 * Put billing account policies response properties.
 */
export interface BillingAccountPoliciesResponseProperties {
  /**
   * Service tenant for the billing account.
   */
  serviceTenants?: ServiceTenantResponse[];
  /**
   * Determine if the transfers are allowed for the billing account
   */
  allowTransfers?: boolean;
}

/**
 * Billing account policies information.
 */
export interface BillingAccountPoliciesResponse extends BaseResource {
  /**
   * Fully qualified ID for the policy.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Policy name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Billing account policies response properties.
   */
  properties?: BillingAccountPoliciesResponseProperties;
}

/**
 * Redeem subscription request properties.
 */
export interface RedeemSubscriptionRequestProperties {
  /**
   * Management group Id for the subscription.
   */
  managementGroupId?: string;
  /**
   * tags for the subscription
   */
  tags?: { [propertyName: string]: string };
}

/**
 * The parameters required to redeem a new subscription.
 */
export interface RedeemSubscriptionRequest {
  /**
   * Redeem subscription request properties.
   */
  properties?: RedeemSubscriptionRequestProperties;
}

/**
 * An interface representing SubscriptionClientOptions.
 */
export interface SubscriptionClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * Defines headers for CreateSubscriptionInEnrollmentAccount operation.
 */
export interface SubscriptionsCreateSubscriptionInEnrollmentAccountHeaders {
  /**
   * GET this URL to retrieve the status of the asynchronous operation.
   */
  location: string;
  /**
   * The amount of delay to use while the status of the operation is checked. The value is
   * expressed in seconds.
   */
  retryAfter: string;
}

/**
 * Defines headers for Get operation.
 */
export interface SubscriptionOperationGetHeaders {
  /**
   * The URL where the status of the asynchronous operation can be checked.
   */
  location: string;
  /**
   * The amount of delay to use while the status of the operation is checked. The value is
   * expressed in seconds.
   */
  retryAfter: number;
}

/**
 * Defines headers for CreateSubscription operation.
 */
export interface SubscriptionsCreateSubscriptionHeaders {
  /**
   * GET this URL to retrieve the status of the asynchronous operation.
   */
  location: string;
  /**
   * The amount of delay to use while the status of the operation is checked. The value is
   * expressed in seconds.
   */
  retryAfter: number;
}

/**
 * Defines headers for CreateCspSubscription operation.
 */
export interface SubscriptionsCreateCspSubscriptionHeaders {
  /**
   * GET this URL to retrieve the status of the asynchronous operation.
   */
  location: string;
  /**
   * The amount of delay to use while the status of the operation is checked. The value is
   * expressed in seconds.
   */
  retryAfter: number;
}

/**
 * Defines headers for Redeem operation.
 */
export interface SubscriptionsRedeemHeaders {
  /**
   * GET this URL to retrieve the status of the asynchronous operation.
   */
  location: string;
  /**
   * The amount of delay to use while the status of the operation is checked. The value is
   * expressed in seconds.
   */
  retryAfter: number;
}

/**
 * @interface
 * Location list operation response.
 * @extends Array<Location>
 */
export interface LocationListResult extends Array<Location> {
}

/**
 * @interface
 * Subscription list operation response.
 * @extends Array<Subscription>
 */
export interface SubscriptionListResult extends Array<Subscription> {
  /**
   * The URL to get the next set of results.
   */
  nextLink: string;
}

/**
 * @interface
 * Tenant Ids information.
 * @extends Array<TenantIdDescription>
 */
export interface TenantListResult extends Array<TenantIdDescription> {
  /**
   * The URL to use for getting the next set of results.
   */
  nextLink: string;
}

/**
 * @interface
 * Result of the request to list operations. It contains a list of operations and a URL link to get
 * the next set of results.
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * URL to get the next set of operation list results if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * Tenant policy information list.
 * @extends Array<GetTenantPolicyResponse>
 */
export interface GetTenantPolicyListResponse extends Array<GetTenantPolicyResponse> {
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for SubscriptionState.
 * Possible values include: 'Enabled', 'Warned', 'PastDue', 'Disabled', 'Deleted'
 * @readonly
 * @enum {string}
 */
export type SubscriptionState = 'Enabled' | 'Warned' | 'PastDue' | 'Disabled' | 'Deleted';

/**
 * Defines values for SpendingLimit.
 * Possible values include: 'On', 'Off', 'CurrentPeriodOff'
 * @readonly
 * @enum {string}
 */
export type SpendingLimit = 'On' | 'Off' | 'CurrentPeriodOff';

/**
 * Defines values for OfferType.
 * Possible values include: 'MS-AZR-0017P', 'MS-AZR-0148P'
 * @readonly
 * @enum {string}
 */
export type OfferType = 'MS-AZR-0017P' | 'MS-AZR-0148P';

/**
 * Defines values for Workload.
 * Possible values include: 'Production', 'DevTest'
 * @readonly
 * @enum {string}
 */
export type Workload = 'Production' | 'DevTest';

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Accepted', 'Succeeded', 'Failed'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Accepted' | 'Succeeded' | 'Failed';

/**
 * Defines values for RedeemState.
 * Possible values include: 'Pending', 'Completed'
 * @readonly
 * @enum {string}
 */
export type RedeemState = 'Pending' | 'Completed';

/**
 * Contains response data for the listLocations operation.
 */
export type SubscriptionsListLocationsResponse = LocationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LocationListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SubscriptionsGetResponse = Subscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Subscription;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SubscriptionsListResponse = SubscriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionListResult;
    };
};

/**
 * Contains response data for the createSubscriptionInEnrollmentAccount operation.
 */
export type SubscriptionsCreateSubscriptionInEnrollmentAccountResponse = SubscriptionCreationResult & SubscriptionsCreateSubscriptionInEnrollmentAccountHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SubscriptionsCreateSubscriptionInEnrollmentAccountHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionCreationResult;
    };
};

/**
 * Contains response data for the createSubscription operation.
 */
export type SubscriptionsCreateSubscriptionResponse = SubscriptionCreationResult & SubscriptionsCreateSubscriptionHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SubscriptionsCreateSubscriptionHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionCreationResult;
    };
};

/**
 * Contains response data for the createCspSubscription operation.
 */
export type SubscriptionsCreateCspSubscriptionResponse = SubscriptionCreationResult & SubscriptionsCreateCspSubscriptionHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SubscriptionsCreateCspSubscriptionHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionCreationResult;
    };
};

/**
 * Contains response data for the createAlias operation.
 */
export type SubscriptionsCreateAliasResponse = SubscriptionAliasResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionAliasResponse;
    };
};

/**
 * Contains response data for the getAlias operation.
 */
export type SubscriptionsGetAliasResponse = SubscriptionAliasResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionAliasResponse;
    };
};

/**
 * Contains response data for the listAlias operation.
 */
export type SubscriptionsListAliasResponse = SubscriptionAliasListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionAliasListResult;
    };
};

/**
 * Contains response data for the redeem operation.
 */
export type SubscriptionsRedeemResponse = SubscriptionsRedeemHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SubscriptionsRedeemHeaders;
    };
};

/**
 * Contains response data for the beginCreateAlias operation.
 */
export type SubscriptionsBeginCreateAliasResponse = SubscriptionAliasResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionAliasResponse;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SubscriptionsListNextResponse = SubscriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type TenantsListResponse = TenantListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TenantListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type TenantsListNextResponse = TenantListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TenantListResult;
    };
};

/**
 * Contains response data for the cancel operation.
 */
export type SubscriptionCancelResponse = CanceledSubscriptionId & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CanceledSubscriptionId;
    };
};

/**
 * Contains response data for the rename operation.
 */
export type SubscriptionRenameResponse = RenamedSubscriptionId & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RenamedSubscriptionId;
    };
};

/**
 * Contains response data for the enable operation.
 */
export type SubscriptionEnableResponse = EnabledSubscriptionId & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnabledSubscriptionId;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SubscriptionOperationGetResponse = SubscriptionCreationResult & SubscriptionOperationGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SubscriptionOperationGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionCreationResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the addUpdatePolicyForTenant operation.
 */
export type SubscriptionPolicyAddUpdatePolicyForTenantResponse = GetTenantPolicyResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GetTenantPolicyResponse;
    };
};

/**
 * Contains response data for the getPolicyForTenant operation.
 */
export type SubscriptionPolicyGetPolicyForTenantResponse = GetTenantPolicyResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GetTenantPolicyResponse;
    };
};

/**
 * Contains response data for the listPolicyForTenant operation.
 */
export type SubscriptionPolicyListPolicyForTenantResponse = GetTenantPolicyListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GetTenantPolicyListResponse;
    };
};

/**
 * Contains response data for the listPolicyForTenantNext operation.
 */
export type SubscriptionPolicyListPolicyForTenantNextResponse = GetTenantPolicyListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GetTenantPolicyListResponse;
    };
};

/**
 * Contains response data for the getPolicy operation.
 */
export type BillingAccountGetPolicyResponse = BillingAccountPoliciesResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingAccountPoliciesResponse;
    };
};
